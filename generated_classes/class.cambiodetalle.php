
<!-- begin of generated class -->
<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        cambiodetalle
* GENERATION DATE:  06.07.2018
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.cambiodetalle.php
* FOR MYSQL TABLE:  cambiodetalle
* FOR MYSQL DB:     carrillo_dbaurora
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/
include_once("../resources/class.aurora.php");
// **********************
// CLASS DECLARATION
// **********************

class cambiodetalle
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************


public $TxnLineID;   // (normal Attribute)
public $ItemRef_ListID;   // (normal Attribute)
public $ItemRef_FullName;   // (normal Attribute)
public $Description;   // (normal Attribute)
public $Quantity;   // (normal Attribute)
public $UnitOfMeasure;   // (normal Attribute)
public $Rate;   // (normal Attribute)
public $RatePercent;   // (normal Attribute)
public $Amount;   // (normal Attribute)
public $InventorySiteRef_ListID;   // (normal Attribute)
public $InventorySiteRef_FullName;   // (normal Attribute)
public $SerialNumber;   // (normal Attribute)
public $LotNumber;   // (normal Attribute)
public $SalesTaxCodeRef_ListID;   // (normal Attribute)
public $SalesTaxCodeRef_FullName;   // (normal Attribute)
public $Invoiced;   // (normal Attribute)
public $IsManuallyClosed;   // (normal Attribute)
public $Other1;   // (normal Attribute)
public $Other2;   // (normal Attribute)
public $IDKEY;   // (normal Attribute)

var $db; // Instance of class db
var $estado; 


// **********************
// CONSTRUCTOR METHOD
// **********************

function __construct()
{

$this->db = conecta_SYNC();
}

function __destruct()
{


}
public function initialize($entity = null, $options = array())
    {
     $TxnLineID= new Text("TxnLineID");
$TxnLineID->setLabel("TxnLineID");
$TxnLineID->setFilters(array('striptags', 'strig'));
$TxnLineID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TxnLineID);

$ItemRef_ListID= new Text("ItemRef_ListID");
$ItemRef_ListID->setLabel("ItemRef_ListID");
$ItemRef_ListID->setFilters(array('striptags', 'strig'));
$ItemRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_ListID);

$ItemRef_FullName= new Text("ItemRef_FullName");
$ItemRef_FullName->setLabel("ItemRef_FullName");
$ItemRef_FullName->setFilters(array('striptags', 'strig'));
$ItemRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_FullName);

$Description= new Text("Description");
$Description->setLabel("Description");
$Description->setFilters(array('striptags', 'strig'));
$Description->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Description);

$Quantity= new Numeric("Quantity");
$Quantity->setLabel("Quantity");
$Quantity->setFilters(array('float'));
$Quantity->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Quantity);

$UnitOfMeasure= new Text("UnitOfMeasure");
$UnitOfMeasure->setLabel("UnitOfMeasure");
$UnitOfMeasure->setFilters(array('striptags', 'strig'));
$UnitOfMeasure->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($UnitOfMeasure);

$Rate= new Numeric("Rate");
$Rate->setLabel("Rate");
$Rate->setFilters(array('float'));
$Rate->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Rate);

$RatePercent= new Numeric("RatePercent");
$RatePercent->setLabel("RatePercent");
$RatePercent->setFilters(array('int'));
$RatePercent->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($RatePercent);

$Amount= new Numeric("Amount");
$Amount->setLabel("Amount");
$Amount->setFilters(array('float'));
$Amount->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Amount);

$InventorySiteRef_ListID= new Text("InventorySiteRef_ListID");
$InventorySiteRef_ListID->setLabel("InventorySiteRef_ListID");
$InventorySiteRef_ListID->setFilters(array('striptags', 'strig'));
$InventorySiteRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($InventorySiteRef_ListID);

$InventorySiteRef_FullName= new Text("InventorySiteRef_FullName");
$InventorySiteRef_FullName->setLabel("InventorySiteRef_FullName");
$InventorySiteRef_FullName->setFilters(array('striptags', 'strig'));
$InventorySiteRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($InventorySiteRef_FullName);

$SerialNumber= new Text("SerialNumber");
$SerialNumber->setLabel("SerialNumber");
$SerialNumber->setFilters(array('striptags', 'strig'));
$SerialNumber->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($SerialNumber);

$LotNumber= new Text("LotNumber");
$LotNumber->setLabel("LotNumber");
$LotNumber->setFilters(array('striptags', 'strig'));
$LotNumber->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($LotNumber);

$SalesTaxCodeRef_ListID= new Text("SalesTaxCodeRef_ListID");
$SalesTaxCodeRef_ListID->setLabel("SalesTaxCodeRef_ListID");
$SalesTaxCodeRef_ListID->setFilters(array('striptags', 'strig'));
$SalesTaxCodeRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($SalesTaxCodeRef_ListID);

$SalesTaxCodeRef_FullName= new Text("SalesTaxCodeRef_FullName");
$SalesTaxCodeRef_FullName->setLabel("SalesTaxCodeRef_FullName");
$SalesTaxCodeRef_FullName->setFilters(array('striptags', 'strig'));
$SalesTaxCodeRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($SalesTaxCodeRef_FullName);

$Invoiced= new Text("Invoiced");
$Invoiced->setLabel("Invoiced");
$Invoiced->setFilters(array('striptags', 'strig'));
$Invoiced->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Invoiced);

$IsManuallyClosed= new Text("IsManuallyClosed");
$IsManuallyClosed->setLabel("IsManuallyClosed");
$IsManuallyClosed->setFilters(array('striptags', 'strig'));
$IsManuallyClosed->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($IsManuallyClosed);

$Other1= new Text("Other1");
$Other1->setLabel("Other1");
$Other1->setFilters(array('striptags', 'strig'));
$Other1->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Other1);

$Other2= new Text("Other2");
$Other2->setLabel("Other2");
$Other2->setFilters(array('striptags', 'strig'));
$Other2->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Other2);

$IDKEY= new Text("IDKEY");
$IDKEY->setLabel("IDKEY");
$IDKEY->setFilters(array('striptags', 'strig'));
$IDKEY->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($IDKEY);


    }
    
function genJson_cambiodetalle($jsonString)
{
$_SESSION['cambiodetalle']['TxnLineID'] = $jsonString->TxnLineID;
$_SESSION['cambiodetalle']['ItemRef_ListID'] = $jsonString->ItemRef_ListID;
$_SESSION['cambiodetalle']['ItemRef_FullName'] = $jsonString->ItemRef_FullName;
$_SESSION['cambiodetalle']['Description'] = $jsonString->Description;
$_SESSION['cambiodetalle']['Quantity'] = $jsonString->Quantity;
$_SESSION['cambiodetalle']['UnitOfMeasure'] = $jsonString->UnitOfMeasure;
$_SESSION['cambiodetalle']['Rate'] = $jsonString->Rate;
$_SESSION['cambiodetalle']['RatePercent'] = $jsonString->RatePercent;
$_SESSION['cambiodetalle']['Amount'] = $jsonString->Amount;
$_SESSION['cambiodetalle']['InventorySiteRef_ListID'] = $jsonString->InventorySiteRef_ListID;
$_SESSION['cambiodetalle']['InventorySiteRef_FullName'] = $jsonString->InventorySiteRef_FullName;
$_SESSION['cambiodetalle']['SerialNumber'] = $jsonString->SerialNumber;
$_SESSION['cambiodetalle']['LotNumber'] = $jsonString->LotNumber;
$_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] = $jsonString->SalesTaxCodeRef_ListID;
$_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] = $jsonString->SalesTaxCodeRef_FullName;
$_SESSION['cambiodetalle']['Invoiced'] = $jsonString->Invoiced;
$_SESSION['cambiodetalle']['IsManuallyClosed'] = $jsonString->IsManuallyClosed;
$_SESSION['cambiodetalle']['Other1'] = $jsonString->Other1;
$_SESSION['cambiodetalle']['Other2'] = $jsonString->Other2;
$_SESSION['cambiodetalle']['IDKEY'] = $jsonString->IDKEY;

}

function genInsert_cambiodetalle()
{
$this->setTxnLineID($_SESSION['cambiodetalle']['TxnLineID']);
$this->setItemRef_ListID($_SESSION['cambiodetalle']['ItemRef_ListID']);
$this->setItemRef_FullName($_SESSION['cambiodetalle']['ItemRef_FullName']);
$this->setDescription($_SESSION['cambiodetalle']['Description']);
$this->setQuantity($_SESSION['cambiodetalle']['Quantity']);
$this->setUnitOfMeasure($_SESSION['cambiodetalle']['UnitOfMeasure']);
$this->setRate($_SESSION['cambiodetalle']['Rate']);
$this->setRatePercent($_SESSION['cambiodetalle']['RatePercent']);
$this->setAmount($_SESSION['cambiodetalle']['Amount']);
$this->setInventorySiteRef_ListID($_SESSION['cambiodetalle']['InventorySiteRef_ListID']);
$this->setInventorySiteRef_FullName($_SESSION['cambiodetalle']['InventorySiteRef_FullName']);
$this->setSerialNumber($_SESSION['cambiodetalle']['SerialNumber']);
$this->setLotNumber($_SESSION['cambiodetalle']['LotNumber']);
$this->setSalesTaxCodeRef_ListID($_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID']);
$this->setSalesTaxCodeRef_FullName($_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName']);
$this->setInvoiced($_SESSION['cambiodetalle']['Invoiced']);
$this->setIsManuallyClosed($_SESSION['cambiodetalle']['IsManuallyClosed']);
$this->setOther1($_SESSION['cambiodetalle']['Other1']);
$this->setOther2($_SESSION['cambiodetalle']['Other2']);
$this->setIDKEY($_SESSION['cambiodetalle']['IDKEY']);

}

function genLimpia_cambiodetalle()
{
$_SESSION['cambiodetalle']['TxnLineID'] = ' ';
$_SESSION['cambiodetalle']['ItemRef_ListID'] = ' ';
$_SESSION['cambiodetalle']['ItemRef_FullName'] = ' ';
$_SESSION['cambiodetalle']['Description'] = ' ';
$_SESSION['cambiodetalle']['Quantity'] = ' ';
$_SESSION['cambiodetalle']['UnitOfMeasure'] = ' ';
$_SESSION['cambiodetalle']['Rate'] = ' ';
$_SESSION['cambiodetalle']['RatePercent'] = ' ';
$_SESSION['cambiodetalle']['Amount'] = ' ';
$_SESSION['cambiodetalle']['InventorySiteRef_ListID'] = ' ';
$_SESSION['cambiodetalle']['InventorySiteRef_FullName'] = ' ';
$_SESSION['cambiodetalle']['SerialNumber'] = ' ';
$_SESSION['cambiodetalle']['LotNumber'] = ' ';
$_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] = ' ';
$_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] = ' ';
$_SESSION['cambiodetalle']['Invoiced'] = ' ';
$_SESSION['cambiodetalle']['IsManuallyClosed'] = ' ';
$_SESSION['cambiodetalle']['Other1'] = ' ';
$_SESSION['cambiodetalle']['Other2'] = ' ';
$_SESSION['cambiodetalle']['IDKEY'] = ' ';

}

function gentraverse_cambiodetalle($node)
{
$node->getElementsByTagName('TxnLineID')->item(0) == NULL ? $_SESSION['cambiodetalle']['TxnLineID'] = ' ' : $_SESSION['cambiodetalle']['TxnLineID'] = $node->getElementsByTagName('TxnLineID')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['cambiodetalle']['ItemRef_ListID'] = ' ' : $_SESSION['cambiodetalle']['ItemRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['cambiodetalle']['ItemRef_FullName'] = ' ' : $_SESSION['cambiodetalle']['ItemRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('Description')->item(0) == NULL ? $_SESSION['cambiodetalle']['Description'] = ' ' : $_SESSION['cambiodetalle']['Description'] = $node->getElementsByTagName('Description')->item(0)->nodeValue;
$node->getElementsByTagName('Quantity')->item(0) == NULL ? $_SESSION['cambiodetalle']['Quantity'] = 0 : $_SESSION['cambiodetalle']['Quantity'] = $node->getElementsByTagName('Quantity')->item(0)->nodeValue;
$node->getElementsByTagName('UnitOfMeasure')->item(0) == NULL ? $_SESSION['cambiodetalle']['UnitOfMeasure'] = ' ' : $_SESSION['cambiodetalle']['UnitOfMeasure'] = $node->getElementsByTagName('UnitOfMeasure')->item(0)->nodeValue;
$node->getElementsByTagName('Rate')->item(0) == NULL ? $_SESSION['cambiodetalle']['Rate'] = 0 : $_SESSION['cambiodetalle']['Rate'] = $node->getElementsByTagName('Rate')->item(0)->nodeValue;
$node->getElementsByTagName('RatePercent')->item(0) == NULL ? $_SESSION['cambiodetalle']['RatePercent'] = 0 : $_SESSION['cambiodetalle']['RatePercent'] = $node->getElementsByTagName('RatePercent')->item(0)->nodeValue;
$node->getElementsByTagName('Amount')->item(0) == NULL ? $_SESSION['cambiodetalle']['Amount'] = 0 : $_SESSION['cambiodetalle']['Amount'] = $node->getElementsByTagName('Amount')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['cambiodetalle']['InventorySiteRef_ListID'] = ' ' : $_SESSION['cambiodetalle']['InventorySiteRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['cambiodetalle']['InventorySiteRef_FullName'] = ' ' : $_SESSION['cambiodetalle']['InventorySiteRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('SerialNumber')->item(0) == NULL ? $_SESSION['cambiodetalle']['SerialNumber'] = ' ' : $_SESSION['cambiodetalle']['SerialNumber'] = $node->getElementsByTagName('SerialNumber')->item(0)->nodeValue;
$node->getElementsByTagName('LotNumber')->item(0) == NULL ? $_SESSION['cambiodetalle']['LotNumber'] = ' ' : $_SESSION['cambiodetalle']['LotNumber'] = $node->getElementsByTagName('LotNumber')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] = ' ' : $_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] = ' ' : $_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('Invoiced')->item(0) == NULL ? $_SESSION['cambiodetalle']['Invoiced'] = ' ' : $_SESSION['cambiodetalle']['Invoiced'] = $node->getElementsByTagName('Invoiced')->item(0)->nodeValue;
$node->getElementsByTagName('IsManuallyClosed')->item(0) == NULL ? $_SESSION['cambiodetalle']['IsManuallyClosed'] = ' ' : $_SESSION['cambiodetalle']['IsManuallyClosed'] = $node->getElementsByTagName('IsManuallyClosed')->item(0)->nodeValue;
$node->getElementsByTagName('Other1')->item(0) == NULL ? $_SESSION['cambiodetalle']['Other1'] = ' ' : $_SESSION['cambiodetalle']['Other1'] = $node->getElementsByTagName('Other1')->item(0)->nodeValue;
$node->getElementsByTagName('Other2')->item(0) == NULL ? $_SESSION['cambiodetalle']['Other2'] = ' ' : $_SESSION['cambiodetalle']['Other2'] = $node->getElementsByTagName('Other2')->item(0)->nodeValue;
$node->getElementsByTagName('IDKEY')->item(0) == NULL ? $_SESSION['cambiodetalle']['IDKEY'] = ' ' : $_SESSION['cambiodetalle']['IDKEY'] = $node->getElementsByTagName('IDKEY')->item(0)->nodeValue;

}

function adiciona_cambiodetalle()
{
        $this->estado = 'ERR';
	$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
        $sql = 'INSERT INTO cambiodetalle (  TxnLineID, ItemRef_ListID, ItemRef_FullName, Description, Quantity, UnitOfMeasure, Rate, RatePercent, Amount, InventorySiteRef_ListID, InventorySiteRef_FullName, SerialNumber, LotNumber, SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName, Invoiced, IsManuallyClosed, Other1, Other2, IDKEY) VALUES ( :TxnLineID, :ItemRef_ListID, :ItemRef_FullName, :Description, :Quantity, :UnitOfMeasure, :Rate, :RatePercent, :Amount, :InventorySiteRef_ListID, :InventorySiteRef_FullName, :SerialNumber, :LotNumber, :SalesTaxCodeRef_ListID, :SalesTaxCodeRef_FullName, :Invoiced, :IsManuallyClosed, :Other1, :Other2, :IDKEY)';
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnLineID', $_SESSION['cambiodetalle']['TxnLineID'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['cambiodetalle']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['cambiodetalle']['ItemRef_FullName'] );
	$stmt->bindParam(':Description', $_SESSION['cambiodetalle']['Description'] );
	$stmt->bindParam(':Quantity', $_SESSION['cambiodetalle']['Quantity'] );
	$stmt->bindParam(':UnitOfMeasure', $_SESSION['cambiodetalle']['UnitOfMeasure'] );
	$stmt->bindParam(':Rate', $_SESSION['cambiodetalle']['Rate'] );
	$stmt->bindParam(':RatePercent', $_SESSION['cambiodetalle']['RatePercent'] );
	$stmt->bindParam(':Amount', $_SESSION['cambiodetalle']['Amount'] );
	$stmt->bindParam(':InventorySiteRef_ListID', $_SESSION['cambiodetalle']['InventorySiteRef_ListID'] );
	$stmt->bindParam(':InventorySiteRef_FullName', $_SESSION['cambiodetalle']['InventorySiteRef_FullName'] );
	$stmt->bindParam(':SerialNumber', $_SESSION['cambiodetalle']['SerialNumber'] );
	$stmt->bindParam(':LotNumber', $_SESSION['cambiodetalle']['LotNumber'] );
	$stmt->bindParam(':SalesTaxCodeRef_ListID', $_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] );
	$stmt->bindParam(':SalesTaxCodeRef_FullName', $_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] );
	$stmt->bindParam(':Invoiced', $_SESSION['cambiodetalle']['Invoiced'] );
	$stmt->bindParam(':IsManuallyClosed', $_SESSION['cambiodetalle']['IsManuallyClosed'] );
	$stmt->bindParam(':Other1', $_SESSION['cambiodetalle']['Other1'] );
	$stmt->bindParam(':Other2', $_SESSION['cambiodetalle']['Other2'] );
	$stmt->bindParam(':IDKEY', $_SESSION['cambiodetalle']['IDKEY'] );
	$stmt->execute();
        } catch(PDOException $e) {
            echo $e->getMessage();
        }    
}

function quitaslashes_cambiodetalle()
{
         $_SESSION['cambiodetalle']['TxnLineID'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['TxnLineID']));
$_SESSION['cambiodetalle']['ItemRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['ItemRef_ListID']));
$_SESSION['cambiodetalle']['ItemRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['ItemRef_FullName']));
$_SESSION['cambiodetalle']['Description'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Description']));
$_SESSION['cambiodetalle']['Quantity'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Quantity']));
$_SESSION['cambiodetalle']['UnitOfMeasure'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['UnitOfMeasure']));
$_SESSION['cambiodetalle']['Rate'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Rate']));
$_SESSION['cambiodetalle']['RatePercent'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['RatePercent']));
$_SESSION['cambiodetalle']['Amount'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Amount']));
$_SESSION['cambiodetalle']['InventorySiteRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['InventorySiteRef_ListID']));
$_SESSION['cambiodetalle']['InventorySiteRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['InventorySiteRef_FullName']));
$_SESSION['cambiodetalle']['SerialNumber'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['SerialNumber']));
$_SESSION['cambiodetalle']['LotNumber'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['LotNumber']));
$_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID']));
$_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName']));
$_SESSION['cambiodetalle']['Invoiced'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Invoiced']));
$_SESSION['cambiodetalle']['IsManuallyClosed'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['IsManuallyClosed']));
$_SESSION['cambiodetalle']['Other1'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Other1']));
$_SESSION['cambiodetalle']['Other2'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['Other2']));
$_SESSION['cambiodetalle']['IDKEY'] = htmlspecialchars(strip_tags($_SESSION['cambiodetalle']['IDKEY']));

 
    }
    


// **********************
// GETTER METHODS
// **********************


function getTxnLineID()
{
return $this->TxnLineID;
}

function getItemRef_ListID()
{
return $this->ItemRef_ListID;
}

function getItemRef_FullName()
{
return $this->ItemRef_FullName;
}

function getDescription()
{
return $this->Description;
}

function getQuantity()
{
return $this->Quantity;
}

function getUnitOfMeasure()
{
return $this->UnitOfMeasure;
}

function getRate()
{
return $this->Rate;
}

function getRatePercent()
{
return $this->RatePercent;
}

function getAmount()
{
return $this->Amount;
}

function getInventorySiteRef_ListID()
{
return $this->InventorySiteRef_ListID;
}

function getInventorySiteRef_FullName()
{
return $this->InventorySiteRef_FullName;
}

function getSerialNumber()
{
return $this->SerialNumber;
}

function getLotNumber()
{
return $this->LotNumber;
}

function getSalesTaxCodeRef_ListID()
{
return $this->SalesTaxCodeRef_ListID;
}

function getSalesTaxCodeRef_FullName()
{
return $this->SalesTaxCodeRef_FullName;
}

function getInvoiced()
{
return $this->Invoiced;
}

function getIsManuallyClosed()
{
return $this->IsManuallyClosed;
}

function getOther1()
{
return $this->Other1;
}

function getOther2()
{
return $this->Other2;
}

function getIDKEY()
{
return $this->IDKEY;
}

// **********************
// SETTER METHODS
// **********************


function setTxnLineID($val)
{
$this->TxnLineID =  $val;
}

function setItemRef_ListID($val)
{
$this->ItemRef_ListID =  $val;
}

function setItemRef_FullName($val)
{
$this->ItemRef_FullName =  $val;
}

function setDescription($val)
{
$this->Description =  $val;
}

function setQuantity($val)
{
$this->Quantity =  $val;
}

function setUnitOfMeasure($val)
{
$this->UnitOfMeasure =  $val;
}

function setRate($val)
{
$this->Rate =  $val;
}

function setRatePercent($val)
{
$this->RatePercent =  $val;
}

function setAmount($val)
{
$this->Amount =  $val;
}

function setInventorySiteRef_ListID($val)
{
$this->InventorySiteRef_ListID =  $val;
}

function setInventorySiteRef_FullName($val)
{
$this->InventorySiteRef_FullName =  $val;
}

function setSerialNumber($val)
{
$this->SerialNumber =  $val;
}

function setLotNumber($val)
{
$this->LotNumber =  $val;
}

function setSalesTaxCodeRef_ListID($val)
{
$this->SalesTaxCodeRef_ListID =  $val;
}

function setSalesTaxCodeRef_FullName($val)
{
$this->SalesTaxCodeRef_FullName =  $val;
}

function setInvoiced($val)
{
$this->Invoiced =  $val;
}

function setIsManuallyClosed($val)
{
$this->IsManuallyClosed =  $val;
}

function setOther1($val)
{
$this->Other1 =  $val;
}

function setOther2($val)
{
$this->Other2 =  $val;
}

function setIDKEY($val)
{
$this->IDKEY =  $val;
}

// ************************************************************************************
// SELECT busca igual en el campo estado retorna OK si existe el registro
//          retorna actualiza si es el mismo registro y tambien carga en la instancia
//          los valores de la lectura
// *************************************************************************************

    function buscaIgual_cambiodetalle() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['cambiodetalle']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetch(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                if ($registro['TxnID'] === $_SESSION['cambiodetalle']['TxnID']) {
                $this->estado = 'ACTUALIZA';
                }
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// ************************************************************************************
// SELECT dependiendo de las condiones recibidas desde el programa llamado se parsea
//          el archivo json para cargar las comparaciones y tambien los nombres de las variables
//          para una lectura de todos los registros que cumplan la condicion
// *************************************************************************************

    function leetodos_cambiodetalle() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['cambiodetalle']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                $this->estado = 'TODOS';
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// **********************
// SELECT METHOD / LOAD
// **********************

function select_cambiodetalle()
{

$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	try {
$sql = 'SELECT * FROM cambiodetalle WHERE TxnLineID = :clave'; 
$stmt = $this->db->prepare($sql);
    $stmt->bindParam(":clave", $_SESSION['cambiodetalle']['TxnID']);
        $stmt->execute();
	$registro = $stmt->fetch(PDO::FETCH_ASSOC);
	if ( ! $registro) {
		$this->estado = 'OK';
		return $this->estado;
	} else {
                
		if ($registro['TxnID'] === $_SESSION['invoice']['TxnID']) {
                    $this->estado = 'ACTUALIZA';
                    }
                    }
            
                } catch(PDOException $e) {
                    echo $e->getMessage();
                }
                
		$this->TxnLineID = $registro['TxnLineID'];

		$this->ItemRef_ListID = $registro['ItemRef_ListID'];

		$this->ItemRef_FullName = $registro['ItemRef_FullName'];

		$this->Description = $registro['Description'];

		$this->Quantity = $registro['Quantity'];

		$this->UnitOfMeasure = $registro['UnitOfMeasure'];

		$this->Rate = $registro['Rate'];

		$this->RatePercent = $registro['RatePercent'];

		$this->Amount = $registro['Amount'];

		$this->InventorySiteRef_ListID = $registro['InventorySiteRef_ListID'];

		$this->InventorySiteRef_FullName = $registro['InventorySiteRef_FullName'];

		$this->SerialNumber = $registro['SerialNumber'];

		$this->LotNumber = $registro['LotNumber'];

		$this->SalesTaxCodeRef_ListID = $registro['SalesTaxCodeRef_ListID'];

		$this->SalesTaxCodeRef_FullName = $registro['SalesTaxCodeRef_FullName'];

		$this->Invoiced = $registro['Invoiced'];

		$this->IsManuallyClosed = $registro['IsManuallyClosed'];

		$this->Other1 = $registro['Other1'];

		$this->Other2 = $registro['Other2'];

		$this->IDKEY = $registro['IDKEY'];


}

// *******************************
// UNSET METHOD / clean
// *******************************

function cleanSession_cambiodetalle()
{

                unset($_SESSION['cambiodetalle']['TxnLineID']);
unset($_SESSION['cambiodetalle']['ItemRef_ListID']);
unset($_SESSION['cambiodetalle']['ItemRef_FullName']);
unset($_SESSION['cambiodetalle']['Description']);
unset($_SESSION['cambiodetalle']['Quantity']);
unset($_SESSION['cambiodetalle']['UnitOfMeasure']);
unset($_SESSION['cambiodetalle']['Rate']);
unset($_SESSION['cambiodetalle']['RatePercent']);
unset($_SESSION['cambiodetalle']['Amount']);
unset($_SESSION['cambiodetalle']['InventorySiteRef_ListID']);
unset($_SESSION['cambiodetalle']['InventorySiteRef_FullName']);
unset($_SESSION['cambiodetalle']['SerialNumber']);
unset($_SESSION['cambiodetalle']['LotNumber']);
unset($_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID']);
unset($_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName']);
unset($_SESSION['cambiodetalle']['Invoiced']);
unset($_SESSION['cambiodetalle']['IsManuallyClosed']);
unset($_SESSION['cambiodetalle']['Other1']);
unset($_SESSION['cambiodetalle']['Other2']);
unset($_SESSION['cambiodetalle']['IDKEY']);


            }

// **********************
// DELETE
// **********************

function delete_cambiodetalle($id)
{


}

// **********************
// UPDATE
// **********************

function update_cambiodetalle()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE cambiodetalle SET ItemRef_ListID=$this->ItemRef_ListID, ItemRef_FullName=$this->ItemRef_FullName, Description=$this->Description, Quantity=$this->Quantity, UnitOfMeasure=$this->UnitOfMeasure, Rate=$this->Rate, RatePercent=$this->RatePercent, Amount=$this->Amount, InventorySiteRef_ListID=$this->InventorySiteRef_ListID, InventorySiteRef_FullName=$this->InventorySiteRef_FullName, SerialNumber=$this->SerialNumber, LotNumber=$this->LotNumber, SalesTaxCodeRef_ListID=$this->SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName=$this->SalesTaxCodeRef_FullName, Invoiced=$this->Invoiced, IsManuallyClosed=$this->IsManuallyClosed, Other1=$this->Other1, Other2=$this->Other2, IDKEY=$this->IDKEY, WHERE TxnLineID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

// ---------------------------------------------------------
// Actualiza tabla con la opcion del PDO bindparam
// ---------------------------------------------------------

function actualiza_cambiodetalle()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE cambiodetalle SET ItemRef_ListID=:ItemRef_ListID, ItemRef_FullName=:ItemRef_FullName, Description=:Description, Quantity=:Quantity, UnitOfMeasure=:UnitOfMeasure, Rate=:Rate, RatePercent=:RatePercent, Amount=:Amount, InventorySiteRef_ListID=:InventorySiteRef_ListID, InventorySiteRef_FullName=:InventorySiteRef_FullName, SerialNumber=:SerialNumber, LotNumber=:LotNumber, SalesTaxCodeRef_ListID=:SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName=:SalesTaxCodeRef_FullName, Invoiced=:Invoiced, IsManuallyClosed=:IsManuallyClosed, Other1=:Other1, Other2=:Other2, IDKEY=:IDKEY, WHERE TxnLineID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnLineID', $_SESSION['cambiodetalle']['TxnLineID'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['cambiodetalle']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['cambiodetalle']['ItemRef_FullName'] );
	$stmt->bindParam(':Description', $_SESSION['cambiodetalle']['Description'] );
	$stmt->bindParam(':Quantity', $_SESSION['cambiodetalle']['Quantity'] );
	$stmt->bindParam(':UnitOfMeasure', $_SESSION['cambiodetalle']['UnitOfMeasure'] );
	$stmt->bindParam(':Rate', $_SESSION['cambiodetalle']['Rate'] );
	$stmt->bindParam(':RatePercent', $_SESSION['cambiodetalle']['RatePercent'] );
	$stmt->bindParam(':Amount', $_SESSION['cambiodetalle']['Amount'] );
	$stmt->bindParam(':InventorySiteRef_ListID', $_SESSION['cambiodetalle']['InventorySiteRef_ListID'] );
	$stmt->bindParam(':InventorySiteRef_FullName', $_SESSION['cambiodetalle']['InventorySiteRef_FullName'] );
	$stmt->bindParam(':SerialNumber', $_SESSION['cambiodetalle']['SerialNumber'] );
	$stmt->bindParam(':LotNumber', $_SESSION['cambiodetalle']['LotNumber'] );
	$stmt->bindParam(':SalesTaxCodeRef_ListID', $_SESSION['cambiodetalle']['SalesTaxCodeRef_ListID'] );
	$stmt->bindParam(':SalesTaxCodeRef_FullName', $_SESSION['cambiodetalle']['SalesTaxCodeRef_FullName'] );
	$stmt->bindParam(':Invoiced', $_SESSION['cambiodetalle']['Invoiced'] );
	$stmt->bindParam(':IsManuallyClosed', $_SESSION['cambiodetalle']['IsManuallyClosed'] );
	$stmt->bindParam(':Other1', $_SESSION['cambiodetalle']['Other1'] );
	$stmt->bindParam(':Other2', $_SESSION['cambiodetalle']['Other2'] );
	$stmt->bindParam(':IDKEY', $_SESSION['cambiodetalle']['IDKEY'] );
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

}
?>
<!-- end of generated class -->
