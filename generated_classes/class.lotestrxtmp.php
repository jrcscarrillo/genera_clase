
<!-- begin of generated class -->
<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        lotestrxtmp
* GENERATION DATE:  08.08.2018
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.lotestrxtmp.php
* FOR MYSQL TABLE:  lotestrxtmp
* FOR MYSQL DB:     carrillo_dbaurora
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/
include_once("../resources/class.aurora.php");
// **********************
// CLASS DECLARATION
// **********************

class lotestrxtmp
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************


public $TxnLineID;   // (normal Attribute)
public $TimeCreated;   // (normal Attribute)
public $TimeModified;   // (normal Attribute)
public $EditSequence;   // (normal Attribute)
public $TxnDate;   // (normal Attribute)
public $RefNumber;   // (normal Attribute)
public $ItemRef_ListID;   // (normal Attribute)
public $ItemRef_FullName;   // (normal Attribute)
public $Memo;   // (normal Attribute)
public $MemoTrx;   // (normal Attribute)
public $NumeroTrx;   // (normal Attribute)
public $FechaTrx;   // (normal Attribute)
public $TipoTrx;   // (normal Attribute)
public $OrigenTrx;   // (normal Attribute)
public $DestinoTrx;   // (normal Attribute)
public $OrigenDesc;   // (normal Attribute)
public $DestinoDesc;   // (normal Attribute)
public $QtyTrx;   // (normal Attribute)
public $Name;   // (normal Attribute)
public $Sales_Desc;   // (normal Attribute)
public $Disponible;   // (normal Attribute)
public $Estado;   // (normal Attribute)

var $db; // Instance of class db
var $estado; 


// **********************
// CONSTRUCTOR METHOD
// **********************

function __construct()
{

$this->db = conecta_SYNC();
}

function __destruct()
{


}
public function initialize($entity = null, $options = array())
    {
     $TxnLineID= new Numeric("TxnLineID");
$TxnLineID->setLabel("TxnLineID");
$TxnLineID->setFilters(array('int'));
$TxnLineID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TxnLineID);

$TimeCreated= new Date("TimeCreated");
$TimeCreated->setLabel("TimeCreated");
$TimeCreated->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeCreated);

$TimeModified= new Date("TimeModified");
$TimeModified->setLabel("TimeModified");
$TimeModified->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeModified);

$EditSequence= new Numeric("EditSequence");
$EditSequence->setLabel("EditSequence");
$EditSequence->setFilters(array('int'));
$EditSequence->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($EditSequence);

$TxnDate= new Date("TxnDate");
$TxnDate->setLabel("TxnDate");
$TxnDate->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TxnDate);

$RefNumber= new Text("RefNumber");
$RefNumber->setLabel("RefNumber");
$RefNumber->setFilters(array('striptags', 'strig'));
$RefNumber->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($RefNumber);

$ItemRef_ListID= new Text("ItemRef_ListID");
$ItemRef_ListID->setLabel("ItemRef_ListID");
$ItemRef_ListID->setFilters(array('striptags', 'strig'));
$ItemRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_ListID);

$ItemRef_FullName= new Text("ItemRef_FullName");
$ItemRef_FullName->setLabel("ItemRef_FullName");
$ItemRef_FullName->setFilters(array('striptags', 'strig'));
$ItemRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_FullName);

$Memo= new Text("Memo");
$Memo->setLabel("Memo");
$Memo->setFilters(array('striptags', 'strig'));
$Memo->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Memo);

$MemoTrx= new Text("MemoTrx");
$MemoTrx->setLabel("MemoTrx");
$MemoTrx->setFilters(array('striptags', 'strig'));
$MemoTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($MemoTrx);

$NumeroTrx= new Numeric("NumeroTrx");
$NumeroTrx->setLabel("NumeroTrx");
$NumeroTrx->setFilters(array('int'));
$NumeroTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($NumeroTrx);

$FechaTrx= new Date("FechaTrx");
$FechaTrx->setLabel("FechaTrx");
$FechaTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($FechaTrx);

$TipoTrx= new Text("TipoTrx");
$TipoTrx->setLabel("TipoTrx");
$TipoTrx->setFilters(array('striptags', 'strig'));
$TipoTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TipoTrx);

$OrigenTrx= new Text("OrigenTrx");
$OrigenTrx->setLabel("OrigenTrx");
$OrigenTrx->setFilters(array('striptags', 'strig'));
$OrigenTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($OrigenTrx);

$DestinoTrx= new Text("DestinoTrx");
$DestinoTrx->setLabel("DestinoTrx");
$DestinoTrx->setFilters(array('striptags', 'strig'));
$DestinoTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($DestinoTrx);

$OrigenDesc= new Text("OrigenDesc");
$OrigenDesc->setLabel("OrigenDesc");
$OrigenDesc->setFilters(array('striptags', 'strig'));
$OrigenDesc->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($OrigenDesc);

$DestinoDesc= new Text("DestinoDesc");
$DestinoDesc->setLabel("DestinoDesc");
$DestinoDesc->setFilters(array('striptags', 'strig'));
$DestinoDesc->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($DestinoDesc);

$QtyTrx= new Numeric("QtyTrx");
$QtyTrx->setLabel("QtyTrx");
$QtyTrx->setFilters(array('int'));
$QtyTrx->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyTrx);

$Name= new Text("Name");
$Name->setLabel("Name");
$Name->setFilters(array('striptags', 'strig'));
$Name->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Name);

$Sales_Desc= new Text("Sales_Desc");
$Sales_Desc->setLabel("Sales_Desc");
$Sales_Desc->setFilters(array('striptags', 'strig'));
$Sales_Desc->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Sales_Desc);

$Disponible= new Numeric("Disponible");
$Disponible->setLabel("Disponible");
$Disponible->setFilters(array('int'));
$Disponible->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Disponible);

$Estado= new Text("Estado");
$Estado->setLabel("Estado");
$Estado->setFilters(array('striptags', 'strig'));
$Estado->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Estado);


    }
    
function genJson_lotestrxtmp($jsonString)
{
$_SESSION['lotestrxtmp']['TxnLineID'] = $jsonString->TxnLineID;
$_SESSION['lotestrxtmp']['TimeCreated'] = $jsonString->TimeCreated;
$_SESSION['lotestrxtmp']['TimeModified'] = $jsonString->TimeModified;
$_SESSION['lotestrxtmp']['EditSequence'] = $jsonString->EditSequence;
$_SESSION['lotestrxtmp']['TxnDate'] = $jsonString->TxnDate;
$_SESSION['lotestrxtmp']['RefNumber'] = $jsonString->RefNumber;
$_SESSION['lotestrxtmp']['ItemRef_ListID'] = $jsonString->ItemRef_ListID;
$_SESSION['lotestrxtmp']['ItemRef_FullName'] = $jsonString->ItemRef_FullName;
$_SESSION['lotestrxtmp']['Memo'] = $jsonString->Memo;
$_SESSION['lotestrxtmp']['MemoTrx'] = $jsonString->MemoTrx;
$_SESSION['lotestrxtmp']['NumeroTrx'] = $jsonString->NumeroTrx;
$_SESSION['lotestrxtmp']['FechaTrx'] = $jsonString->FechaTrx;
$_SESSION['lotestrxtmp']['TipoTrx'] = $jsonString->TipoTrx;
$_SESSION['lotestrxtmp']['OrigenTrx'] = $jsonString->OrigenTrx;
$_SESSION['lotestrxtmp']['DestinoTrx'] = $jsonString->DestinoTrx;
$_SESSION['lotestrxtmp']['OrigenDesc'] = $jsonString->OrigenDesc;
$_SESSION['lotestrxtmp']['DestinoDesc'] = $jsonString->DestinoDesc;
$_SESSION['lotestrxtmp']['QtyTrx'] = $jsonString->QtyTrx;
$_SESSION['lotestrxtmp']['Name'] = $jsonString->Name;
$_SESSION['lotestrxtmp']['Sales_Desc'] = $jsonString->Sales_Desc;
$_SESSION['lotestrxtmp']['Disponible'] = $jsonString->Disponible;
$_SESSION['lotestrxtmp']['Estado'] = $jsonString->Estado;

}

function genInsert_lotestrxtmp()
{
$this->setTxnLineID($_SESSION['lotestrxtmp']['TxnLineID']);
$this->setTimeCreated($_SESSION['lotestrxtmp']['TimeCreated']);
$this->setTimeModified($_SESSION['lotestrxtmp']['TimeModified']);
$this->setEditSequence($_SESSION['lotestrxtmp']['EditSequence']);
$this->setTxnDate($_SESSION['lotestrxtmp']['TxnDate']);
$this->setRefNumber($_SESSION['lotestrxtmp']['RefNumber']);
$this->setItemRef_ListID($_SESSION['lotestrxtmp']['ItemRef_ListID']);
$this->setItemRef_FullName($_SESSION['lotestrxtmp']['ItemRef_FullName']);
$this->setMemo($_SESSION['lotestrxtmp']['Memo']);
$this->setMemoTrx($_SESSION['lotestrxtmp']['MemoTrx']);
$this->setNumeroTrx($_SESSION['lotestrxtmp']['NumeroTrx']);
$this->setFechaTrx($_SESSION['lotestrxtmp']['FechaTrx']);
$this->setTipoTrx($_SESSION['lotestrxtmp']['TipoTrx']);
$this->setOrigenTrx($_SESSION['lotestrxtmp']['OrigenTrx']);
$this->setDestinoTrx($_SESSION['lotestrxtmp']['DestinoTrx']);
$this->setOrigenDesc($_SESSION['lotestrxtmp']['OrigenDesc']);
$this->setDestinoDesc($_SESSION['lotestrxtmp']['DestinoDesc']);
$this->setQtyTrx($_SESSION['lotestrxtmp']['QtyTrx']);
$this->setName($_SESSION['lotestrxtmp']['Name']);
$this->setSales_Desc($_SESSION['lotestrxtmp']['Sales_Desc']);
$this->setDisponible($_SESSION['lotestrxtmp']['Disponible']);
$this->setEstado($_SESSION['lotestrxtmp']['Estado']);

}

function genLimpia_lotestrxtmp()
{
$_SESSION['lotestrxtmp']['TxnLineID'] = ' ';
$_SESSION['lotestrxtmp']['TimeCreated'] = ' ';
$_SESSION['lotestrxtmp']['TimeModified'] = ' ';
$_SESSION['lotestrxtmp']['EditSequence'] = ' ';
$_SESSION['lotestrxtmp']['TxnDate'] = ' ';
$_SESSION['lotestrxtmp']['RefNumber'] = ' ';
$_SESSION['lotestrxtmp']['ItemRef_ListID'] = ' ';
$_SESSION['lotestrxtmp']['ItemRef_FullName'] = ' ';
$_SESSION['lotestrxtmp']['Memo'] = ' ';
$_SESSION['lotestrxtmp']['MemoTrx'] = ' ';
$_SESSION['lotestrxtmp']['NumeroTrx'] = ' ';
$_SESSION['lotestrxtmp']['FechaTrx'] = ' ';
$_SESSION['lotestrxtmp']['TipoTrx'] = ' ';
$_SESSION['lotestrxtmp']['OrigenTrx'] = ' ';
$_SESSION['lotestrxtmp']['DestinoTrx'] = ' ';
$_SESSION['lotestrxtmp']['OrigenDesc'] = ' ';
$_SESSION['lotestrxtmp']['DestinoDesc'] = ' ';
$_SESSION['lotestrxtmp']['QtyTrx'] = ' ';
$_SESSION['lotestrxtmp']['Name'] = ' ';
$_SESSION['lotestrxtmp']['Sales_Desc'] = ' ';
$_SESSION['lotestrxtmp']['Disponible'] = ' ';
$_SESSION['lotestrxtmp']['Estado'] = ' ';

}

function gentraverse_lotestrxtmp($node)
{
$node->getElementsByTagName('TxnLineID')->item(0) == NULL ? $_SESSION['lotestrxtmp']['TxnLineID'] = 0 : $_SESSION['lotestrxtmp']['TxnLineID'] = $node->getElementsByTagName('TxnLineID')->item(0)->nodeValue;
$node->getElementsByTagName('TimeCreated')->item(0) == NULL ? $_SESSION['lotestrxtmp']['TimeCreated'] = '2010-08-10' : $_SESSION['lotestrxtmp']['TimeCreated'] = $node->getElementsByTagName('TimeCreated')->item(0)->nodeValue;
$node->getElementsByTagName('TimeModified')->item(0) == NULL ? $_SESSION['lotestrxtmp']['TimeModified'] = '2010-08-10' : $_SESSION['lotestrxtmp']['TimeModified'] = $node->getElementsByTagName('TimeModified')->item(0)->nodeValue;
$node->getElementsByTagName('EditSequence')->item(0) == NULL ? $_SESSION['lotestrxtmp']['EditSequence'] = 0 : $_SESSION['lotestrxtmp']['EditSequence'] = $node->getElementsByTagName('EditSequence')->item(0)->nodeValue;
$node->getElementsByTagName('TxnDate')->item(0) == NULL ? $_SESSION['lotestrxtmp']['TxnDate'] = '2010-08-10' : $_SESSION['lotestrxtmp']['TxnDate'] = $node->getElementsByTagName('TxnDate')->item(0)->nodeValue;
$node->getElementsByTagName('RefNumber')->item(0) == NULL ? $_SESSION['lotestrxtmp']['RefNumber'] = ' ' : $_SESSION['lotestrxtmp']['RefNumber'] = $node->getElementsByTagName('RefNumber')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['lotestrxtmp']['ItemRef_ListID'] = ' ' : $_SESSION['lotestrxtmp']['ItemRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['lotestrxtmp']['ItemRef_FullName'] = ' ' : $_SESSION['lotestrxtmp']['ItemRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('Memo')->item(0) == NULL ? $_SESSION['lotestrxtmp']['Memo'] = ' ' : $_SESSION['lotestrxtmp']['Memo'] = $node->getElementsByTagName('Memo')->item(0)->nodeValue;
$node->getElementsByTagName('MemoTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['MemoTrx'] = ' ' : $_SESSION['lotestrxtmp']['MemoTrx'] = $node->getElementsByTagName('MemoTrx')->item(0)->nodeValue;
$node->getElementsByTagName('NumeroTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['NumeroTrx'] = 0 : $_SESSION['lotestrxtmp']['NumeroTrx'] = $node->getElementsByTagName('NumeroTrx')->item(0)->nodeValue;
$node->getElementsByTagName('FechaTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['FechaTrx'] = '2010-08-10' : $_SESSION['lotestrxtmp']['FechaTrx'] = $node->getElementsByTagName('FechaTrx')->item(0)->nodeValue;
$node->getElementsByTagName('TipoTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['TipoTrx'] = ' ' : $_SESSION['lotestrxtmp']['TipoTrx'] = $node->getElementsByTagName('TipoTrx')->item(0)->nodeValue;
$node->getElementsByTagName('OrigenTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['OrigenTrx'] = ' ' : $_SESSION['lotestrxtmp']['OrigenTrx'] = $node->getElementsByTagName('OrigenTrx')->item(0)->nodeValue;
$node->getElementsByTagName('DestinoTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['DestinoTrx'] = ' ' : $_SESSION['lotestrxtmp']['DestinoTrx'] = $node->getElementsByTagName('DestinoTrx')->item(0)->nodeValue;
$node->getElementsByTagName('OrigenDesc')->item(0) == NULL ? $_SESSION['lotestrxtmp']['OrigenDesc'] = ' ' : $_SESSION['lotestrxtmp']['OrigenDesc'] = $node->getElementsByTagName('OrigenDesc')->item(0)->nodeValue;
$node->getElementsByTagName('DestinoDesc')->item(0) == NULL ? $_SESSION['lotestrxtmp']['DestinoDesc'] = ' ' : $_SESSION['lotestrxtmp']['DestinoDesc'] = $node->getElementsByTagName('DestinoDesc')->item(0)->nodeValue;
$node->getElementsByTagName('QtyTrx')->item(0) == NULL ? $_SESSION['lotestrxtmp']['QtyTrx'] = 0 : $_SESSION['lotestrxtmp']['QtyTrx'] = $node->getElementsByTagName('QtyTrx')->item(0)->nodeValue;
$node->getElementsByTagName('Name')->item(0) == NULL ? $_SESSION['lotestrxtmp']['Name'] = ' ' : $_SESSION['lotestrxtmp']['Name'] = $node->getElementsByTagName('Name')->item(0)->nodeValue;
$node->getElementsByTagName('Desc')->item(0) == NULL ? $_SESSION['lotestrxtmp']['Sales_Desc'] = ' ' : $_SESSION['lotestrxtmp']['Sales_Desc'] = $node->getElementsByTagName('Desc')->item(0)->nodeValue;
$node->getElementsByTagName('Disponible')->item(0) == NULL ? $_SESSION['lotestrxtmp']['Disponible'] = 0 : $_SESSION['lotestrxtmp']['Disponible'] = $node->getElementsByTagName('Disponible')->item(0)->nodeValue;
$node->getElementsByTagName('Estado')->item(0) == NULL ? $_SESSION['lotestrxtmp']['Estado'] = ' ' : $_SESSION['lotestrxtmp']['Estado'] = $node->getElementsByTagName('Estado')->item(0)->nodeValue;

}

function adiciona_lotestrxtmp()
{
        $this->estado = 'ERR';
	$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
        $sql = 'INSERT INTO lotestrxtmp (  TxnLineID, TimeCreated, TimeModified, EditSequence, TxnDate, RefNumber, ItemRef_ListID, ItemRef_FullName, Memo, MemoTrx, NumeroTrx, FechaTrx, TipoTrx, OrigenTrx, DestinoTrx, OrigenDesc, DestinoDesc, QtyTrx, Name, Sales_Desc, Disponible, Estado) VALUES ( :TxnLineID, :TimeCreated, :TimeModified, :EditSequence, :TxnDate, :RefNumber, :ItemRef_ListID, :ItemRef_FullName, :Memo, :MemoTrx, :NumeroTrx, :FechaTrx, :TipoTrx, :OrigenTrx, :DestinoTrx, :OrigenDesc, :DestinoDesc, :QtyTrx, :Name, :Sales_Desc, :Disponible, :Estado)';
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnLineID', $_SESSION['lotestrxtmp']['TxnLineID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['lotestrxtmp']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['lotestrxtmp']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['lotestrxtmp']['EditSequence'] );
	$stmt->bindParam(':TxnDate', $_SESSION['lotestrxtmp']['TxnDate'] );
	$stmt->bindParam(':RefNumber', $_SESSION['lotestrxtmp']['RefNumber'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['lotestrxtmp']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['lotestrxtmp']['ItemRef_FullName'] );
	$stmt->bindParam(':Memo', $_SESSION['lotestrxtmp']['Memo'] );
	$stmt->bindParam(':MemoTrx', $_SESSION['lotestrxtmp']['MemoTrx'] );
	$stmt->bindParam(':NumeroTrx', $_SESSION['lotestrxtmp']['NumeroTrx'] );
	$stmt->bindParam(':FechaTrx', $_SESSION['lotestrxtmp']['FechaTrx'] );
	$stmt->bindParam(':TipoTrx', $_SESSION['lotestrxtmp']['TipoTrx'] );
	$stmt->bindParam(':OrigenTrx', $_SESSION['lotestrxtmp']['OrigenTrx'] );
	$stmt->bindParam(':DestinoTrx', $_SESSION['lotestrxtmp']['DestinoTrx'] );
	$stmt->bindParam(':OrigenDesc', $_SESSION['lotestrxtmp']['OrigenDesc'] );
	$stmt->bindParam(':DestinoDesc', $_SESSION['lotestrxtmp']['DestinoDesc'] );
	$stmt->bindParam(':QtyTrx', $_SESSION['lotestrxtmp']['QtyTrx'] );
	$stmt->bindParam(':Name', $_SESSION['lotestrxtmp']['Name'] );
	$stmt->bindParam(':Sales_Desc', $_SESSION['lotestrxtmp']['Sales_Desc'] );
	$stmt->bindParam(':Disponible', $_SESSION['lotestrxtmp']['Disponible'] );
	$stmt->bindParam(':Estado', $_SESSION['lotestrxtmp']['Estado'] );
	$stmt->execute();
        } catch(PDOException $e) {
            echo $e->getMessage();
        }    
}

function quitaslashes_lotestrxtmp()
{
         $_SESSION['lotestrxtmp']['TxnLineID'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['TxnLineID']));
$_SESSION['lotestrxtmp']['TimeCreated'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['TimeCreated']));
$_SESSION['lotestrxtmp']['TimeModified'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['TimeModified']));
$_SESSION['lotestrxtmp']['EditSequence'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['EditSequence']));
$_SESSION['lotestrxtmp']['TxnDate'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['TxnDate']));
$_SESSION['lotestrxtmp']['RefNumber'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['RefNumber']));
$_SESSION['lotestrxtmp']['ItemRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['ItemRef_ListID']));
$_SESSION['lotestrxtmp']['ItemRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['ItemRef_FullName']));
$_SESSION['lotestrxtmp']['Memo'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['Memo']));
$_SESSION['lotestrxtmp']['MemoTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['MemoTrx']));
$_SESSION['lotestrxtmp']['NumeroTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['NumeroTrx']));
$_SESSION['lotestrxtmp']['FechaTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['FechaTrx']));
$_SESSION['lotestrxtmp']['TipoTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['TipoTrx']));
$_SESSION['lotestrxtmp']['OrigenTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['OrigenTrx']));
$_SESSION['lotestrxtmp']['DestinoTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['DestinoTrx']));
$_SESSION['lotestrxtmp']['OrigenDesc'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['OrigenDesc']));
$_SESSION['lotestrxtmp']['DestinoDesc'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['DestinoDesc']));
$_SESSION['lotestrxtmp']['QtyTrx'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['QtyTrx']));
$_SESSION['lotestrxtmp']['Name'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['Name']));
$_SESSION['lotestrxtmp']['Sales_Desc'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['Sales_Desc']));
$_SESSION['lotestrxtmp']['Disponible'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['Disponible']));
$_SESSION['lotestrxtmp']['Estado'] = htmlspecialchars(strip_tags($_SESSION['lotestrxtmp']['Estado']));

 
    }
    


// **********************
// GETTER METHODS
// **********************


function getTxnLineID()
{
return $this->TxnLineID;
}

function getTimeCreated()
{
return $this->TimeCreated;
}

function getTimeModified()
{
return $this->TimeModified;
}

function getEditSequence()
{
return $this->EditSequence;
}

function getTxnDate()
{
return $this->TxnDate;
}

function getRefNumber()
{
return $this->RefNumber;
}

function getItemRef_ListID()
{
return $this->ItemRef_ListID;
}

function getItemRef_FullName()
{
return $this->ItemRef_FullName;
}

function getMemo()
{
return $this->Memo;
}

function getMemoTrx()
{
return $this->MemoTrx;
}

function getNumeroTrx()
{
return $this->NumeroTrx;
}

function getFechaTrx()
{
return $this->FechaTrx;
}

function getTipoTrx()
{
return $this->TipoTrx;
}

function getOrigenTrx()
{
return $this->OrigenTrx;
}

function getDestinoTrx()
{
return $this->DestinoTrx;
}

function getOrigenDesc()
{
return $this->OrigenDesc;
}

function getDestinoDesc()
{
return $this->DestinoDesc;
}

function getQtyTrx()
{
return $this->QtyTrx;
}

function getName()
{
return $this->Name;
}

function getSales_Desc()
{
return $this->Sales_Desc;
}

function getDisponible()
{
return $this->Disponible;
}

function getEstado()
{
return $this->Estado;
}

// **********************
// SETTER METHODS
// **********************


function setTxnLineID($val)
{
$this->TxnLineID =  $val;
}

function setTimeCreated($val)
{
$this->TimeCreated =  $val;
}

function setTimeModified($val)
{
$this->TimeModified =  $val;
}

function setEditSequence($val)
{
$this->EditSequence =  $val;
}

function setTxnDate($val)
{
$this->TxnDate =  $val;
}

function setRefNumber($val)
{
$this->RefNumber =  $val;
}

function setItemRef_ListID($val)
{
$this->ItemRef_ListID =  $val;
}

function setItemRef_FullName($val)
{
$this->ItemRef_FullName =  $val;
}

function setMemo($val)
{
$this->Memo =  $val;
}

function setMemoTrx($val)
{
$this->MemoTrx =  $val;
}

function setNumeroTrx($val)
{
$this->NumeroTrx =  $val;
}

function setFechaTrx($val)
{
$this->FechaTrx =  $val;
}

function setTipoTrx($val)
{
$this->TipoTrx =  $val;
}

function setOrigenTrx($val)
{
$this->OrigenTrx =  $val;
}

function setDestinoTrx($val)
{
$this->DestinoTrx =  $val;
}

function setOrigenDesc($val)
{
$this->OrigenDesc =  $val;
}

function setDestinoDesc($val)
{
$this->DestinoDesc =  $val;
}

function setQtyTrx($val)
{
$this->QtyTrx =  $val;
}

function setName($val)
{
$this->Name =  $val;
}

function setSales_Desc($val)
{
$this->Sales_Desc =  $val;
}

function setDisponible($val)
{
$this->Disponible =  $val;
}

function setEstado($val)
{
$this->Estado =  $val;
}

// ************************************************************************************
// SELECT busca igual en el campo estado retorna OK si existe el registro
//          retorna actualiza si es el mismo registro y tambien carga en la instancia
//          los valores de la lectura
// *************************************************************************************

    function buscaIgual_lotestrxtmp() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['lotestrxtmp']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetch(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                if ($registro['TxnID'] === $_SESSION['lotestrxtmp']['TxnID']) {
                $this->estado = 'ACTUALIZA';
                }
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// ************************************************************************************
// SELECT dependiendo de las condiones recibidas desde el programa llamado se parsea
//          el archivo json para cargar las comparaciones y tambien los nombres de las variables
//          para una lectura de todos los registros que cumplan la condicion
// *************************************************************************************

    function leetodos_lotestrxtmp() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['lotestrxtmp']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                $this->estado = 'TODOS';
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// **********************
// SELECT METHOD / LOAD
// **********************

function select_lotestrxtmp()
{

$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	try {
$sql = 'SELECT * FROM lotestrxtmp WHERE TxnLineID = :clave'; 
$stmt = $this->db->prepare($sql);
    $stmt->bindParam(":clave", $_SESSION['lotestrxtmp']['TxnID']);
        $stmt->execute();
	$registro = $stmt->fetch(PDO::FETCH_ASSOC);
	if ( ! $registro) {
		$this->estado = 'OK';
		return $this->estado;
	} else {
                
		if ($registro['TxnID'] === $_SESSION['invoice']['TxnID']) {
                    $this->estado = 'ACTUALIZA';
                    }
                    }
            
                } catch(PDOException $e) {
                    echo $e->getMessage();
                }
                
		$this->TxnLineID = $registro['TxnLineID'];

		$this->TimeCreated = $registro['TimeCreated'];

		$this->TimeModified = $registro['TimeModified'];

		$this->EditSequence = $registro['EditSequence'];

		$this->TxnDate = $registro['TxnDate'];

		$this->RefNumber = $registro['RefNumber'];

		$this->ItemRef_ListID = $registro['ItemRef_ListID'];

		$this->ItemRef_FullName = $registro['ItemRef_FullName'];

		$this->Memo = $registro['Memo'];

		$this->MemoTrx = $registro['MemoTrx'];

		$this->NumeroTrx = $registro['NumeroTrx'];

		$this->FechaTrx = $registro['FechaTrx'];

		$this->TipoTrx = $registro['TipoTrx'];

		$this->OrigenTrx = $registro['OrigenTrx'];

		$this->DestinoTrx = $registro['DestinoTrx'];

		$this->OrigenDesc = $registro['OrigenDesc'];

		$this->DestinoDesc = $registro['DestinoDesc'];

		$this->QtyTrx = $registro['QtyTrx'];

		$this->Name = $registro['Name'];

		$this->Sales_Desc = $registro['Sales_Desc'];

		$this->Disponible = $registro['Disponible'];

		$this->Estado = $registro['Estado'];


}

// *******************************
// UNSET METHOD / clean
// *******************************

function cleanSession_lotestrxtmp()
{

                unset($_SESSION['lotestrxtmp']['TxnLineID']);
unset($_SESSION['lotestrxtmp']['TimeCreated']);
unset($_SESSION['lotestrxtmp']['TimeModified']);
unset($_SESSION['lotestrxtmp']['EditSequence']);
unset($_SESSION['lotestrxtmp']['TxnDate']);
unset($_SESSION['lotestrxtmp']['RefNumber']);
unset($_SESSION['lotestrxtmp']['ItemRef_ListID']);
unset($_SESSION['lotestrxtmp']['ItemRef_FullName']);
unset($_SESSION['lotestrxtmp']['Memo']);
unset($_SESSION['lotestrxtmp']['MemoTrx']);
unset($_SESSION['lotestrxtmp']['NumeroTrx']);
unset($_SESSION['lotestrxtmp']['FechaTrx']);
unset($_SESSION['lotestrxtmp']['TipoTrx']);
unset($_SESSION['lotestrxtmp']['OrigenTrx']);
unset($_SESSION['lotestrxtmp']['DestinoTrx']);
unset($_SESSION['lotestrxtmp']['OrigenDesc']);
unset($_SESSION['lotestrxtmp']['DestinoDesc']);
unset($_SESSION['lotestrxtmp']['QtyTrx']);
unset($_SESSION['lotestrxtmp']['Name']);
unset($_SESSION['lotestrxtmp']['Sales_Desc']);
unset($_SESSION['lotestrxtmp']['Disponible']);
unset($_SESSION['lotestrxtmp']['Estado']);


            }

// **********************
// DELETE
// **********************

function delete_lotestrxtmp($id)
{


}

// **********************
// UPDATE
// **********************

function update_lotestrxtmp()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE lotestrxtmp SET TimeCreated=$this->TimeCreated, TimeModified=$this->TimeModified, EditSequence=$this->EditSequence, TxnDate=$this->TxnDate, RefNumber=$this->RefNumber, ItemRef_ListID=$this->ItemRef_ListID, ItemRef_FullName=$this->ItemRef_FullName, Memo=$this->Memo, MemoTrx=$this->MemoTrx, NumeroTrx=$this->NumeroTrx, FechaTrx=$this->FechaTrx, TipoTrx=$this->TipoTrx, OrigenTrx=$this->OrigenTrx, DestinoTrx=$this->DestinoTrx, OrigenDesc=$this->OrigenDesc, DestinoDesc=$this->DestinoDesc, QtyTrx=$this->QtyTrx, Name=$this->Name, Sales_Desc=$this->Sales_Desc, Disponible=$this->Disponible, Estado=$this->Estado, WHERE TxnLineID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

// ---------------------------------------------------------
// Actualiza tabla con la opcion del PDO bindparam
// ---------------------------------------------------------

function actualiza_lotestrxtmp()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE lotestrxtmp SET TimeCreated=:TimeCreated, TimeModified=:TimeModified, EditSequence=:EditSequence, TxnDate=:TxnDate, RefNumber=:RefNumber, ItemRef_ListID=:ItemRef_ListID, ItemRef_FullName=:ItemRef_FullName, Memo=:Memo, MemoTrx=:MemoTrx, NumeroTrx=:NumeroTrx, FechaTrx=:FechaTrx, TipoTrx=:TipoTrx, OrigenTrx=:OrigenTrx, DestinoTrx=:DestinoTrx, OrigenDesc=:OrigenDesc, DestinoDesc=:DestinoDesc, QtyTrx=:QtyTrx, Name=:Name, Sales_Desc=:Sales_Desc, Disponible=:Disponible, Estado=:Estado, WHERE TxnLineID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnLineID', $_SESSION['lotestrxtmp']['TxnLineID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['lotestrxtmp']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['lotestrxtmp']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['lotestrxtmp']['EditSequence'] );
	$stmt->bindParam(':TxnDate', $_SESSION['lotestrxtmp']['TxnDate'] );
	$stmt->bindParam(':RefNumber', $_SESSION['lotestrxtmp']['RefNumber'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['lotestrxtmp']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['lotestrxtmp']['ItemRef_FullName'] );
	$stmt->bindParam(':Memo', $_SESSION['lotestrxtmp']['Memo'] );
	$stmt->bindParam(':MemoTrx', $_SESSION['lotestrxtmp']['MemoTrx'] );
	$stmt->bindParam(':NumeroTrx', $_SESSION['lotestrxtmp']['NumeroTrx'] );
	$stmt->bindParam(':FechaTrx', $_SESSION['lotestrxtmp']['FechaTrx'] );
	$stmt->bindParam(':TipoTrx', $_SESSION['lotestrxtmp']['TipoTrx'] );
	$stmt->bindParam(':OrigenTrx', $_SESSION['lotestrxtmp']['OrigenTrx'] );
	$stmt->bindParam(':DestinoTrx', $_SESSION['lotestrxtmp']['DestinoTrx'] );
	$stmt->bindParam(':OrigenDesc', $_SESSION['lotestrxtmp']['OrigenDesc'] );
	$stmt->bindParam(':DestinoDesc', $_SESSION['lotestrxtmp']['DestinoDesc'] );
	$stmt->bindParam(':QtyTrx', $_SESSION['lotestrxtmp']['QtyTrx'] );
	$stmt->bindParam(':Name', $_SESSION['lotestrxtmp']['Name'] );
	$stmt->bindParam(':Sales_Desc', $_SESSION['lotestrxtmp']['Sales_Desc'] );
	$stmt->bindParam(':Disponible', $_SESSION['lotestrxtmp']['Disponible'] );
	$stmt->bindParam(':Estado', $_SESSION['lotestrxtmp']['Estado'] );
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

}
?>
<!-- end of generated class -->
