
<!-- begin of generated class -->
<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        class
* GENERATION DATE:  30.07.2018
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.class.php
* FOR MYSQL TABLE:  class
* FOR MYSQL DB:     carrillo_dbaurora
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/
include_once("../resources/class.aurora.php");
// **********************
// CLASS DECLARATION
// **********************

class class
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************


public $ListID;   // (normal Attribute)
public $TimeCreated;   // (normal Attribute)
public $TimeModified;   // (normal Attribute)
public $EditSequence;   // (normal Attribute)
public $Name;   // (normal Attribute)
public $FullName;   // (normal Attribute)
public $IsActive;   // (normal Attribute)
public $ParentRef_ListID;   // (normal Attribute)
public $ParentRef_FullName;   // (normal Attribute)
public $Sublevel;   // (normal Attribute)
public $Status;   // (normal Attribute)

var $db; // Instance of class db
var $estado; 


// **********************
// CONSTRUCTOR METHOD
// **********************

function __construct()
{

$this->db = conecta_SYNC();
}

function __destruct()
{


}
public function initialize($entity = null, $options = array())
    {
     $ListID= new Text("ListID");
$ListID->setLabel("ListID");
$ListID->setFilters(array('striptags', 'strig'));
$ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ListID);

$TimeCreated= new Date("TimeCreated");
$TimeCreated->setLabel("TimeCreated");
$TimeCreated->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeCreated);

$TimeModified= new Date("TimeModified");
$TimeModified->setLabel("TimeModified");
$TimeModified->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeModified);

$EditSequence= new Numeric("EditSequence");
$EditSequence->setLabel("EditSequence");
$EditSequence->setFilters(array('int'));
$EditSequence->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($EditSequence);

$Name= new Text("Name");
$Name->setLabel("Name");
$Name->setFilters(array('striptags', 'strig'));
$Name->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Name);

$FullName= new Text("FullName");
$FullName->setLabel("FullName");
$FullName->setFilters(array('striptags', 'strig'));
$FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($FullName);

$IsActive= new Text("IsActive");
$IsActive->setLabel("IsActive");
$IsActive->setFilters(array('striptags', 'strig'));
$IsActive->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($IsActive);

$ParentRef_ListID= new Text("ParentRef_ListID");
$ParentRef_ListID->setLabel("ParentRef_ListID");
$ParentRef_ListID->setFilters(array('striptags', 'strig'));
$ParentRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ParentRef_ListID);

$ParentRef_FullName= new Text("ParentRef_FullName");
$ParentRef_FullName->setLabel("ParentRef_FullName");
$ParentRef_FullName->setFilters(array('striptags', 'strig'));
$ParentRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ParentRef_FullName);

$Sublevel= new Numeric("Sublevel");
$Sublevel->setLabel("Sublevel");
$Sublevel->setFilters(array('int'));
$Sublevel->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Sublevel);

$Status= new Text("Status");
$Status->setLabel("Status");
$Status->setFilters(array('striptags', 'strig'));
$Status->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Status);


    }
    
function genJson_class($jsonString)
{
$_SESSION['class']['ListID'] = $jsonString->ListID;
$_SESSION['class']['TimeCreated'] = $jsonString->TimeCreated;
$_SESSION['class']['TimeModified'] = $jsonString->TimeModified;
$_SESSION['class']['EditSequence'] = $jsonString->EditSequence;
$_SESSION['class']['Name'] = $jsonString->Name;
$_SESSION['class']['FullName'] = $jsonString->FullName;
$_SESSION['class']['IsActive'] = $jsonString->IsActive;
$_SESSION['class']['ParentRef_ListID'] = $jsonString->ParentRef_ListID;
$_SESSION['class']['ParentRef_FullName'] = $jsonString->ParentRef_FullName;
$_SESSION['class']['Sublevel'] = $jsonString->Sublevel;
$_SESSION['class']['Status'] = $jsonString->Status;

}

function genInsert_class()
{
$this->setListID($_SESSION['class']['ListID']);
$this->setTimeCreated($_SESSION['class']['TimeCreated']);
$this->setTimeModified($_SESSION['class']['TimeModified']);
$this->setEditSequence($_SESSION['class']['EditSequence']);
$this->setName($_SESSION['class']['Name']);
$this->setFullName($_SESSION['class']['FullName']);
$this->setIsActive($_SESSION['class']['IsActive']);
$this->setParentRef_ListID($_SESSION['class']['ParentRef_ListID']);
$this->setParentRef_FullName($_SESSION['class']['ParentRef_FullName']);
$this->setSublevel($_SESSION['class']['Sublevel']);
$this->setStatus($_SESSION['class']['Status']);

}

function genLimpia_class()
{
$_SESSION['class']['ListID'] = ' ';
$_SESSION['class']['TimeCreated'] = ' ';
$_SESSION['class']['TimeModified'] = ' ';
$_SESSION['class']['EditSequence'] = ' ';
$_SESSION['class']['Name'] = ' ';
$_SESSION['class']['FullName'] = ' ';
$_SESSION['class']['IsActive'] = ' ';
$_SESSION['class']['ParentRef_ListID'] = ' ';
$_SESSION['class']['ParentRef_FullName'] = ' ';
$_SESSION['class']['Sublevel'] = ' ';
$_SESSION['class']['Status'] = ' ';

}

function gentraverse_class($node)
{
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['class']['ListID'] = ' ' : $_SESSION['class']['ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('TimeCreated')->item(0) == NULL ? $_SESSION['class']['TimeCreated'] = '2010-08-10' : $_SESSION['class']['TimeCreated'] = $node->getElementsByTagName('TimeCreated')->item(0)->nodeValue;
$node->getElementsByTagName('TimeModified')->item(0) == NULL ? $_SESSION['class']['TimeModified'] = '2010-08-10' : $_SESSION['class']['TimeModified'] = $node->getElementsByTagName('TimeModified')->item(0)->nodeValue;
$node->getElementsByTagName('EditSequence')->item(0) == NULL ? $_SESSION['class']['EditSequence'] = 0 : $_SESSION['class']['EditSequence'] = $node->getElementsByTagName('EditSequence')->item(0)->nodeValue;
$node->getElementsByTagName('Name')->item(0) == NULL ? $_SESSION['class']['Name'] = ' ' : $_SESSION['class']['Name'] = $node->getElementsByTagName('Name')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['class']['FullName'] = ' ' : $_SESSION['class']['FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('IsActive')->item(0) == NULL ? $_SESSION['class']['IsActive'] = ' ' : $_SESSION['class']['IsActive'] = $node->getElementsByTagName('IsActive')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['class']['ParentRef_ListID'] = ' ' : $_SESSION['class']['ParentRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['class']['ParentRef_FullName'] = ' ' : $_SESSION['class']['ParentRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('Sublevel')->item(0) == NULL ? $_SESSION['class']['Sublevel'] = 0 : $_SESSION['class']['Sublevel'] = $node->getElementsByTagName('Sublevel')->item(0)->nodeValue;
$node->getElementsByTagName('Status')->item(0) == NULL ? $_SESSION['class']['Status'] = ' ' : $_SESSION['class']['Status'] = $node->getElementsByTagName('Status')->item(0)->nodeValue;

}

function adiciona_class()
{
        $this->estado = 'ERR';
	$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
        $sql = 'INSERT INTO class (  ListID, TimeCreated, TimeModified, EditSequence, Name, FullName, IsActive, ParentRef_ListID, ParentRef_FullName, Sublevel, Status) VALUES ( :ListID, :TimeCreated, :TimeModified, :EditSequence, :Name, :FullName, :IsActive, :ParentRef_ListID, :ParentRef_FullName, :Sublevel, :Status)';
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':ListID', $_SESSION['class']['ListID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['class']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['class']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['class']['EditSequence'] );
	$stmt->bindParam(':Name', $_SESSION['class']['Name'] );
	$stmt->bindParam(':FullName', $_SESSION['class']['FullName'] );
	$stmt->bindParam(':IsActive', $_SESSION['class']['IsActive'] );
	$stmt->bindParam(':ParentRef_ListID', $_SESSION['class']['ParentRef_ListID'] );
	$stmt->bindParam(':ParentRef_FullName', $_SESSION['class']['ParentRef_FullName'] );
	$stmt->bindParam(':Sublevel', $_SESSION['class']['Sublevel'] );
	$stmt->bindParam(':Status', $_SESSION['class']['Status'] );
	$stmt->execute();
        } catch(PDOException $e) {
            echo $e->getMessage();
        }    
}

function quitaslashes_class()
{
         $_SESSION['class']['ListID'] = htmlspecialchars(strip_tags($_SESSION['class']['ListID']));
$_SESSION['class']['TimeCreated'] = htmlspecialchars(strip_tags($_SESSION['class']['TimeCreated']));
$_SESSION['class']['TimeModified'] = htmlspecialchars(strip_tags($_SESSION['class']['TimeModified']));
$_SESSION['class']['EditSequence'] = htmlspecialchars(strip_tags($_SESSION['class']['EditSequence']));
$_SESSION['class']['Name'] = htmlspecialchars(strip_tags($_SESSION['class']['Name']));
$_SESSION['class']['FullName'] = htmlspecialchars(strip_tags($_SESSION['class']['FullName']));
$_SESSION['class']['IsActive'] = htmlspecialchars(strip_tags($_SESSION['class']['IsActive']));
$_SESSION['class']['ParentRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['class']['ParentRef_ListID']));
$_SESSION['class']['ParentRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['class']['ParentRef_FullName']));
$_SESSION['class']['Sublevel'] = htmlspecialchars(strip_tags($_SESSION['class']['Sublevel']));
$_SESSION['class']['Status'] = htmlspecialchars(strip_tags($_SESSION['class']['Status']));

 
    }
    


// **********************
// GETTER METHODS
// **********************


function getListID()
{
return $this->ListID;
}

function getTimeCreated()
{
return $this->TimeCreated;
}

function getTimeModified()
{
return $this->TimeModified;
}

function getEditSequence()
{
return $this->EditSequence;
}

function getName()
{
return $this->Name;
}

function getFullName()
{
return $this->FullName;
}

function getIsActive()
{
return $this->IsActive;
}

function getParentRef_ListID()
{
return $this->ParentRef_ListID;
}

function getParentRef_FullName()
{
return $this->ParentRef_FullName;
}

function getSublevel()
{
return $this->Sublevel;
}

function getStatus()
{
return $this->Status;
}

// **********************
// SETTER METHODS
// **********************


function setListID($val)
{
$this->ListID =  $val;
}

function setTimeCreated($val)
{
$this->TimeCreated =  $val;
}

function setTimeModified($val)
{
$this->TimeModified =  $val;
}

function setEditSequence($val)
{
$this->EditSequence =  $val;
}

function setName($val)
{
$this->Name =  $val;
}

function setFullName($val)
{
$this->FullName =  $val;
}

function setIsActive($val)
{
$this->IsActive =  $val;
}

function setParentRef_ListID($val)
{
$this->ParentRef_ListID =  $val;
}

function setParentRef_FullName($val)
{
$this->ParentRef_FullName =  $val;
}

function setSublevel($val)
{
$this->Sublevel =  $val;
}

function setStatus($val)
{
$this->Status =  $val;
}

// ************************************************************************************
// SELECT busca igual en el campo estado retorna OK si existe el registro
//          retorna actualiza si es el mismo registro y tambien carga en la instancia
//          los valores de la lectura
// *************************************************************************************

    function buscaIgual_class() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['class']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetch(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                if ($registro['TxnID'] === $_SESSION['class']['TxnID']) {
                $this->estado = 'ACTUALIZA';
                }
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// ************************************************************************************
// SELECT dependiendo de las condiones recibidas desde el programa llamado se parsea
//          el archivo json para cargar las comparaciones y tambien los nombres de las variables
//          para una lectura de todos los registros que cumplan la condicion
// *************************************************************************************

    function leetodos_class() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['class']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                $this->estado = 'TODOS';
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// **********************
// SELECT METHOD / LOAD
// **********************

function select_class()
{

$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	try {
$sql = 'SELECT * FROM class WHERE ListID = :clave'; 
$stmt = $this->db->prepare($sql);
    $stmt->bindParam(":clave", $_SESSION['class']['TxnID']);
        $stmt->execute();
	$registro = $stmt->fetch(PDO::FETCH_ASSOC);
	if ( ! $registro) {
		$this->estado = 'OK';
		return $this->estado;
	} else {
                
		if ($registro['TxnID'] === $_SESSION['invoice']['TxnID']) {
                    $this->estado = 'ACTUALIZA';
                    }
                    }
            
                } catch(PDOException $e) {
                    echo $e->getMessage();
                }
                
		$this->ListID = $registro['ListID'];

		$this->TimeCreated = $registro['TimeCreated'];

		$this->TimeModified = $registro['TimeModified'];

		$this->EditSequence = $registro['EditSequence'];

		$this->Name = $registro['Name'];

		$this->FullName = $registro['FullName'];

		$this->IsActive = $registro['IsActive'];

		$this->ParentRef_ListID = $registro['ParentRef_ListID'];

		$this->ParentRef_FullName = $registro['ParentRef_FullName'];

		$this->Sublevel = $registro['Sublevel'];

		$this->Status = $registro['Status'];


}

// *******************************
// UNSET METHOD / clean
// *******************************

function cleanSession_class()
{

                unset($_SESSION['class']['ListID']);
unset($_SESSION['class']['TimeCreated']);
unset($_SESSION['class']['TimeModified']);
unset($_SESSION['class']['EditSequence']);
unset($_SESSION['class']['Name']);
unset($_SESSION['class']['FullName']);
unset($_SESSION['class']['IsActive']);
unset($_SESSION['class']['ParentRef_ListID']);
unset($_SESSION['class']['ParentRef_FullName']);
unset($_SESSION['class']['Sublevel']);
unset($_SESSION['class']['Status']);


            }

// **********************
// DELETE
// **********************

function delete_class($id)
{


}

// **********************
// UPDATE
// **********************

function update_class()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE class SET TimeCreated=$this->TimeCreated, TimeModified=$this->TimeModified, EditSequence=$this->EditSequence, Name=$this->Name, FullName=$this->FullName, IsActive=$this->IsActive, ParentRef_ListID=$this->ParentRef_ListID, ParentRef_FullName=$this->ParentRef_FullName, Sublevel=$this->Sublevel, Status=$this->Status, WHERE ListID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

// ---------------------------------------------------------
// Actualiza tabla con la opcion del PDO bindparam
// ---------------------------------------------------------

function actualiza_class()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE class SET TimeCreated=:TimeCreated, TimeModified=:TimeModified, EditSequence=:EditSequence, Name=:Name, FullName=:FullName, IsActive=:IsActive, ParentRef_ListID=:ParentRef_ListID, ParentRef_FullName=:ParentRef_FullName, Sublevel=:Sublevel, Status=:Status, WHERE ListID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':ListID', $_SESSION['class']['ListID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['class']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['class']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['class']['EditSequence'] );
	$stmt->bindParam(':Name', $_SESSION['class']['Name'] );
	$stmt->bindParam(':FullName', $_SESSION['class']['FullName'] );
	$stmt->bindParam(':IsActive', $_SESSION['class']['IsActive'] );
	$stmt->bindParam(':ParentRef_ListID', $_SESSION['class']['ParentRef_ListID'] );
	$stmt->bindParam(':ParentRef_FullName', $_SESSION['class']['ParentRef_FullName'] );
	$stmt->bindParam(':Sublevel', $_SESSION['class']['Sublevel'] );
	$stmt->bindParam(':Status', $_SESSION['class']['Status'] );
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

}
?>
<!-- end of generated class -->
