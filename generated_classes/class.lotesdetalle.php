
<!-- begin of generated class -->
<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        lotesdetalle
* GENERATION DATE:  01.08.2018
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.lotesdetalle.php
* FOR MYSQL TABLE:  lotesdetalle
* FOR MYSQL DB:     carrillo_dbaurora
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/
include_once("../resources/class.aurora.php");
// **********************
// CLASS DECLARATION
// **********************

class lotesdetalle
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************


public $TxnID;   // (normal Attribute)
public $TimeCreated;   // (normal Attribute)
public $TimeModified;   // (normal Attribute)
public $EditSequence;   // (normal Attribute)
public $TxnDate;   // (normal Attribute)
public $TxnNumber;   // (normal Attribute)
public $RefNumber;   // (normal Attribute)
public $ItemRef_ListID;   // (normal Attribute)
public $ItemRef_FullName;   // (normal Attribute)
public $EmployeeRef_ListID;   // (normal Attribute)
public $EmployeeRef_FullName;   // (normal Attribute)
public $Memo;   // (normal Attribute)
public $BodProducida;   // (normal Attribute)
public $QtyProducida;   // (normal Attribute)
public $BodBuena;   // (normal Attribute)
public $QtyBuena;   // (normal Attribute)
public $BodMala;   // (normal Attribute)
public $QtyMala;   // (normal Attribute)
public $BodReproceso;   // (normal Attribute)
public $QtyReproceso;   // (normal Attribute)
public $BodMuestra;   // (normal Attribute)
public $QtyMuestra;   // (normal Attribute)
public $BodLab;   // (normal Attribute)
public $QtyLab;   // (normal Attribute)
public $IsPending;   // (normal Attribute)
public $Estado;   // (normal Attribute)

var $db; // Instance of class db
var $estado; 


// **********************
// CONSTRUCTOR METHOD
// **********************

function __construct()
{

$this->db = conecta_SYNC();
}

function __destruct()
{


}
public function initialize($entity = null, $options = array())
    {
     $TimeCreated= new Date("TimeCreated");
$TimeCreated->setLabel("TimeCreated");
$TimeCreated->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeCreated);

$TimeModified= new Date("TimeModified");
$TimeModified->setLabel("TimeModified");
$TimeModified->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TimeModified);

$EditSequence= new Numeric("EditSequence");
$EditSequence->setLabel("EditSequence");
$EditSequence->setFilters(array('int'));
$EditSequence->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($EditSequence);

$TxnDate= new Date("TxnDate");
$TxnDate->setLabel("TxnDate");
$TxnDate->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TxnDate);

$TxnNumber= new Numeric("TxnNumber");
$TxnNumber->setLabel("TxnNumber");
$TxnNumber->setFilters(array('int'));
$TxnNumber->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($TxnNumber);

$RefNumber= new Text("RefNumber");
$RefNumber->setLabel("RefNumber");
$RefNumber->setFilters(array('striptags', 'strig'));
$RefNumber->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($RefNumber);

$ItemRef_ListID= new Text("ItemRef_ListID");
$ItemRef_ListID->setLabel("ItemRef_ListID");
$ItemRef_ListID->setFilters(array('striptags', 'strig'));
$ItemRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_ListID);

$ItemRef_FullName= new Text("ItemRef_FullName");
$ItemRef_FullName->setLabel("ItemRef_FullName");
$ItemRef_FullName->setFilters(array('striptags', 'strig'));
$ItemRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($ItemRef_FullName);

$EmployeeRef_ListID= new Text("EmployeeRef_ListID");
$EmployeeRef_ListID->setLabel("EmployeeRef_ListID");
$EmployeeRef_ListID->setFilters(array('striptags', 'strig'));
$EmployeeRef_ListID->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($EmployeeRef_ListID);

$EmployeeRef_FullName= new Text("EmployeeRef_FullName");
$EmployeeRef_FullName->setLabel("EmployeeRef_FullName");
$EmployeeRef_FullName->setFilters(array('striptags', 'strig'));
$EmployeeRef_FullName->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($EmployeeRef_FullName);

$Memo= new Text("Memo");
$Memo->setLabel("Memo");
$Memo->setFilters(array('striptags', 'strig'));
$Memo->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Memo);

$BodProducida= new Text("BodProducida");
$BodProducida->setLabel("BodProducida");
$BodProducida->setFilters(array('striptags', 'strig'));
$BodProducida->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodProducida);

$QtyProducida= new Numeric("QtyProducida");
$QtyProducida->setLabel("QtyProducida");
$QtyProducida->setFilters(array('int'));
$QtyProducida->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyProducida);

$BodBuena= new Text("BodBuena");
$BodBuena->setLabel("BodBuena");
$BodBuena->setFilters(array('striptags', 'strig'));
$BodBuena->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodBuena);

$QtyBuena= new Numeric("QtyBuena");
$QtyBuena->setLabel("QtyBuena");
$QtyBuena->setFilters(array('int'));
$QtyBuena->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyBuena);

$BodMala= new Text("BodMala");
$BodMala->setLabel("BodMala");
$BodMala->setFilters(array('striptags', 'strig'));
$BodMala->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodMala);

$QtyMala= new Numeric("QtyMala");
$QtyMala->setLabel("QtyMala");
$QtyMala->setFilters(array('int'));
$QtyMala->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyMala);

$BodReproceso= new Text("BodReproceso");
$BodReproceso->setLabel("BodReproceso");
$BodReproceso->setFilters(array('striptags', 'strig'));
$BodReproceso->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodReproceso);

$QtyReproceso= new Numeric("QtyReproceso");
$QtyReproceso->setLabel("QtyReproceso");
$QtyReproceso->setFilters(array('int'));
$QtyReproceso->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyReproceso);

$BodMuestra= new Text("BodMuestra");
$BodMuestra->setLabel("BodMuestra");
$BodMuestra->setFilters(array('striptags', 'strig'));
$BodMuestra->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodMuestra);

$QtyMuestra= new Numeric("QtyMuestra");
$QtyMuestra->setLabel("QtyMuestra");
$QtyMuestra->setFilters(array('int'));
$QtyMuestra->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyMuestra);

$BodLab= new Text("BodLab");
$BodLab->setLabel("BodLab");
$BodLab->setFilters(array('striptags', 'strig'));
$BodLab->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($BodLab);

$QtyLab= new Numeric("QtyLab");
$QtyLab->setLabel("QtyLab");
$QtyLab->setFilters(array('int'));
$QtyLab->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($QtyLab);

$IsPending= new Text("IsPending");
$IsPending->setLabel("IsPending");
$IsPending->setFilters(array('striptags', 'strig'));
$IsPending->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($IsPending);

$Estado= new Text("Estado");
$Estado->setLabel("Estado");
$Estado->setFilters(array('striptags', 'strig'));
$Estado->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Estado);


    }
    
function genJson_lotesdetalle($jsonString)
{
$_SESSION['lotesdetalle']['TxnID'] = $jsonString->TxnID;
$_SESSION['lotesdetalle']['TimeCreated'] = $jsonString->TimeCreated;
$_SESSION['lotesdetalle']['TimeModified'] = $jsonString->TimeModified;
$_SESSION['lotesdetalle']['EditSequence'] = $jsonString->EditSequence;
$_SESSION['lotesdetalle']['TxnDate'] = $jsonString->TxnDate;
$_SESSION['lotesdetalle']['TxnNumber'] = $jsonString->TxnNumber;
$_SESSION['lotesdetalle']['RefNumber'] = $jsonString->RefNumber;
$_SESSION['lotesdetalle']['ItemRef_ListID'] = $jsonString->ItemRef_ListID;
$_SESSION['lotesdetalle']['ItemRef_FullName'] = $jsonString->ItemRef_FullName;
$_SESSION['lotesdetalle']['EmployeeRef_ListID'] = $jsonString->EmployeeRef_ListID;
$_SESSION['lotesdetalle']['EmployeeRef_FullName'] = $jsonString->EmployeeRef_FullName;
$_SESSION['lotesdetalle']['Memo'] = $jsonString->Memo;
$_SESSION['lotesdetalle']['BodProducida'] = $jsonString->BodProducida;
$_SESSION['lotesdetalle']['QtyProducida'] = $jsonString->QtyProducida;
$_SESSION['lotesdetalle']['BodBuena'] = $jsonString->BodBuena;
$_SESSION['lotesdetalle']['QtyBuena'] = $jsonString->QtyBuena;
$_SESSION['lotesdetalle']['BodMala'] = $jsonString->BodMala;
$_SESSION['lotesdetalle']['QtyMala'] = $jsonString->QtyMala;
$_SESSION['lotesdetalle']['BodReproceso'] = $jsonString->BodReproceso;
$_SESSION['lotesdetalle']['QtyReproceso'] = $jsonString->QtyReproceso;
$_SESSION['lotesdetalle']['BodMuestra'] = $jsonString->BodMuestra;
$_SESSION['lotesdetalle']['QtyMuestra'] = $jsonString->QtyMuestra;
$_SESSION['lotesdetalle']['BodLab'] = $jsonString->BodLab;
$_SESSION['lotesdetalle']['QtyLab'] = $jsonString->QtyLab;
$_SESSION['lotesdetalle']['IsPending'] = $jsonString->IsPending;
$_SESSION['lotesdetalle']['Estado'] = $jsonString->Estado;

}

function genInsert_lotesdetalle()
{
$this->setTxnID($_SESSION['lotesdetalle']['TxnID']);
$this->setTimeCreated($_SESSION['lotesdetalle']['TimeCreated']);
$this->setTimeModified($_SESSION['lotesdetalle']['TimeModified']);
$this->setEditSequence($_SESSION['lotesdetalle']['EditSequence']);
$this->setTxnDate($_SESSION['lotesdetalle']['TxnDate']);
$this->setTxnNumber($_SESSION['lotesdetalle']['TxnNumber']);
$this->setRefNumber($_SESSION['lotesdetalle']['RefNumber']);
$this->setItemRef_ListID($_SESSION['lotesdetalle']['ItemRef_ListID']);
$this->setItemRef_FullName($_SESSION['lotesdetalle']['ItemRef_FullName']);
$this->setEmployeeRef_ListID($_SESSION['lotesdetalle']['EmployeeRef_ListID']);
$this->setEmployeeRef_FullName($_SESSION['lotesdetalle']['EmployeeRef_FullName']);
$this->setMemo($_SESSION['lotesdetalle']['Memo']);
$this->setBodProducida($_SESSION['lotesdetalle']['BodProducida']);
$this->setQtyProducida($_SESSION['lotesdetalle']['QtyProducida']);
$this->setBodBuena($_SESSION['lotesdetalle']['BodBuena']);
$this->setQtyBuena($_SESSION['lotesdetalle']['QtyBuena']);
$this->setBodMala($_SESSION['lotesdetalle']['BodMala']);
$this->setQtyMala($_SESSION['lotesdetalle']['QtyMala']);
$this->setBodReproceso($_SESSION['lotesdetalle']['BodReproceso']);
$this->setQtyReproceso($_SESSION['lotesdetalle']['QtyReproceso']);
$this->setBodMuestra($_SESSION['lotesdetalle']['BodMuestra']);
$this->setQtyMuestra($_SESSION['lotesdetalle']['QtyMuestra']);
$this->setBodLab($_SESSION['lotesdetalle']['BodLab']);
$this->setQtyLab($_SESSION['lotesdetalle']['QtyLab']);
$this->setIsPending($_SESSION['lotesdetalle']['IsPending']);
$this->setEstado($_SESSION['lotesdetalle']['Estado']);

}

function genLimpia_lotesdetalle()
{
$_SESSION['lotesdetalle']['TxnID'] = ' ';
$_SESSION['lotesdetalle']['TimeCreated'] = ' ';
$_SESSION['lotesdetalle']['TimeModified'] = ' ';
$_SESSION['lotesdetalle']['EditSequence'] = ' ';
$_SESSION['lotesdetalle']['TxnDate'] = ' ';
$_SESSION['lotesdetalle']['TxnNumber'] = ' ';
$_SESSION['lotesdetalle']['RefNumber'] = ' ';
$_SESSION['lotesdetalle']['ItemRef_ListID'] = ' ';
$_SESSION['lotesdetalle']['ItemRef_FullName'] = ' ';
$_SESSION['lotesdetalle']['EmployeeRef_ListID'] = ' ';
$_SESSION['lotesdetalle']['EmployeeRef_FullName'] = ' ';
$_SESSION['lotesdetalle']['Memo'] = ' ';
$_SESSION['lotesdetalle']['BodProducida'] = ' ';
$_SESSION['lotesdetalle']['QtyProducida'] = ' ';
$_SESSION['lotesdetalle']['BodBuena'] = ' ';
$_SESSION['lotesdetalle']['QtyBuena'] = ' ';
$_SESSION['lotesdetalle']['BodMala'] = ' ';
$_SESSION['lotesdetalle']['QtyMala'] = ' ';
$_SESSION['lotesdetalle']['BodReproceso'] = ' ';
$_SESSION['lotesdetalle']['QtyReproceso'] = ' ';
$_SESSION['lotesdetalle']['BodMuestra'] = ' ';
$_SESSION['lotesdetalle']['QtyMuestra'] = ' ';
$_SESSION['lotesdetalle']['BodLab'] = ' ';
$_SESSION['lotesdetalle']['QtyLab'] = ' ';
$_SESSION['lotesdetalle']['IsPending'] = ' ';
$_SESSION['lotesdetalle']['Estado'] = ' ';

}

function gentraverse_lotesdetalle($node)
{
$node->getElementsByTagName('TxnID')->item(0) == NULL ? $_SESSION['lotesdetalle']['TxnID'] =  : $_SESSION['lotesdetalle']['TxnID'] = $node->getElementsByTagName('TxnID')->item(0)->nodeValue;
$node->getElementsByTagName('TimeCreated')->item(0) == NULL ? $_SESSION['lotesdetalle']['TimeCreated'] = '2010-08-10' : $_SESSION['lotesdetalle']['TimeCreated'] = $node->getElementsByTagName('TimeCreated')->item(0)->nodeValue;
$node->getElementsByTagName('TimeModified')->item(0) == NULL ? $_SESSION['lotesdetalle']['TimeModified'] = '2010-08-10' : $_SESSION['lotesdetalle']['TimeModified'] = $node->getElementsByTagName('TimeModified')->item(0)->nodeValue;
$node->getElementsByTagName('EditSequence')->item(0) == NULL ? $_SESSION['lotesdetalle']['EditSequence'] = 0 : $_SESSION['lotesdetalle']['EditSequence'] = $node->getElementsByTagName('EditSequence')->item(0)->nodeValue;
$node->getElementsByTagName('TxnDate')->item(0) == NULL ? $_SESSION['lotesdetalle']['TxnDate'] = '2010-08-10' : $_SESSION['lotesdetalle']['TxnDate'] = $node->getElementsByTagName('TxnDate')->item(0)->nodeValue;
$node->getElementsByTagName('TxnNumber')->item(0) == NULL ? $_SESSION['lotesdetalle']['TxnNumber'] = 0 : $_SESSION['lotesdetalle']['TxnNumber'] = $node->getElementsByTagName('TxnNumber')->item(0)->nodeValue;
$node->getElementsByTagName('RefNumber')->item(0) == NULL ? $_SESSION['lotesdetalle']['RefNumber'] = ' ' : $_SESSION['lotesdetalle']['RefNumber'] = $node->getElementsByTagName('RefNumber')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['lotesdetalle']['ItemRef_ListID'] = ' ' : $_SESSION['lotesdetalle']['ItemRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['lotesdetalle']['ItemRef_FullName'] = ' ' : $_SESSION['lotesdetalle']['ItemRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('ListID')->item(0) == NULL ? $_SESSION['lotesdetalle']['EmployeeRef_ListID'] = ' ' : $_SESSION['lotesdetalle']['EmployeeRef_ListID'] = $node->getElementsByTagName('ListID')->item(0)->nodeValue;
$node->getElementsByTagName('FullName')->item(0) == NULL ? $_SESSION['lotesdetalle']['EmployeeRef_FullName'] = ' ' : $_SESSION['lotesdetalle']['EmployeeRef_FullName'] = $node->getElementsByTagName('FullName')->item(0)->nodeValue;
$node->getElementsByTagName('Memo')->item(0) == NULL ? $_SESSION['lotesdetalle']['Memo'] = ' ' : $_SESSION['lotesdetalle']['Memo'] = $node->getElementsByTagName('Memo')->item(0)->nodeValue;
$node->getElementsByTagName('BodProducida')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodProducida'] = ' ' : $_SESSION['lotesdetalle']['BodProducida'] = $node->getElementsByTagName('BodProducida')->item(0)->nodeValue;
$node->getElementsByTagName('QtyProducida')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyProducida'] = 0 : $_SESSION['lotesdetalle']['QtyProducida'] = $node->getElementsByTagName('QtyProducida')->item(0)->nodeValue;
$node->getElementsByTagName('BodBuena')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodBuena'] = ' ' : $_SESSION['lotesdetalle']['BodBuena'] = $node->getElementsByTagName('BodBuena')->item(0)->nodeValue;
$node->getElementsByTagName('QtyBuena')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyBuena'] = 0 : $_SESSION['lotesdetalle']['QtyBuena'] = $node->getElementsByTagName('QtyBuena')->item(0)->nodeValue;
$node->getElementsByTagName('BodMala')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodMala'] = ' ' : $_SESSION['lotesdetalle']['BodMala'] = $node->getElementsByTagName('BodMala')->item(0)->nodeValue;
$node->getElementsByTagName('QtyMala')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyMala'] = 0 : $_SESSION['lotesdetalle']['QtyMala'] = $node->getElementsByTagName('QtyMala')->item(0)->nodeValue;
$node->getElementsByTagName('BodReproceso')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodReproceso'] = ' ' : $_SESSION['lotesdetalle']['BodReproceso'] = $node->getElementsByTagName('BodReproceso')->item(0)->nodeValue;
$node->getElementsByTagName('QtyReproceso')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyReproceso'] = 0 : $_SESSION['lotesdetalle']['QtyReproceso'] = $node->getElementsByTagName('QtyReproceso')->item(0)->nodeValue;
$node->getElementsByTagName('BodMuestra')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodMuestra'] = ' ' : $_SESSION['lotesdetalle']['BodMuestra'] = $node->getElementsByTagName('BodMuestra')->item(0)->nodeValue;
$node->getElementsByTagName('QtyMuestra')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyMuestra'] = 0 : $_SESSION['lotesdetalle']['QtyMuestra'] = $node->getElementsByTagName('QtyMuestra')->item(0)->nodeValue;
$node->getElementsByTagName('BodLab')->item(0) == NULL ? $_SESSION['lotesdetalle']['BodLab'] = ' ' : $_SESSION['lotesdetalle']['BodLab'] = $node->getElementsByTagName('BodLab')->item(0)->nodeValue;
$node->getElementsByTagName('QtyLab')->item(0) == NULL ? $_SESSION['lotesdetalle']['QtyLab'] = 0 : $_SESSION['lotesdetalle']['QtyLab'] = $node->getElementsByTagName('QtyLab')->item(0)->nodeValue;
$node->getElementsByTagName('IsPending')->item(0) == NULL ? $_SESSION['lotesdetalle']['IsPending'] = ' ' : $_SESSION['lotesdetalle']['IsPending'] = $node->getElementsByTagName('IsPending')->item(0)->nodeValue;
$node->getElementsByTagName('Estado')->item(0) == NULL ? $_SESSION['lotesdetalle']['Estado'] = ' ' : $_SESSION['lotesdetalle']['Estado'] = $node->getElementsByTagName('Estado')->item(0)->nodeValue;

}

function adiciona_lotesdetalle()
{
        $this->estado = 'ERR';
	$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
        $sql = 'INSERT INTO lotesdetalle (  TxnID, TimeCreated, TimeModified, EditSequence, TxnDate, TxnNumber, RefNumber, ItemRef_ListID, ItemRef_FullName, EmployeeRef_ListID, EmployeeRef_FullName, Memo, BodProducida, QtyProducida, BodBuena, QtyBuena, BodMala, QtyMala, BodReproceso, QtyReproceso, BodMuestra, QtyMuestra, BodLab, QtyLab, IsPending, Estado) VALUES ( :TxnID, :TimeCreated, :TimeModified, :EditSequence, :TxnDate, :TxnNumber, :RefNumber, :ItemRef_ListID, :ItemRef_FullName, :EmployeeRef_ListID, :EmployeeRef_FullName, :Memo, :BodProducida, :QtyProducida, :BodBuena, :QtyBuena, :BodMala, :QtyMala, :BodReproceso, :QtyReproceso, :BodMuestra, :QtyMuestra, :BodLab, :QtyLab, :IsPending, :Estado)';
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnID', $_SESSION['lotesdetalle']['TxnID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['lotesdetalle']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['lotesdetalle']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['lotesdetalle']['EditSequence'] );
	$stmt->bindParam(':TxnDate', $_SESSION['lotesdetalle']['TxnDate'] );
	$stmt->bindParam(':TxnNumber', $_SESSION['lotesdetalle']['TxnNumber'] );
	$stmt->bindParam(':RefNumber', $_SESSION['lotesdetalle']['RefNumber'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['lotesdetalle']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['lotesdetalle']['ItemRef_FullName'] );
	$stmt->bindParam(':EmployeeRef_ListID', $_SESSION['lotesdetalle']['EmployeeRef_ListID'] );
	$stmt->bindParam(':EmployeeRef_FullName', $_SESSION['lotesdetalle']['EmployeeRef_FullName'] );
	$stmt->bindParam(':Memo', $_SESSION['lotesdetalle']['Memo'] );
	$stmt->bindParam(':BodProducida', $_SESSION['lotesdetalle']['BodProducida'] );
	$stmt->bindParam(':QtyProducida', $_SESSION['lotesdetalle']['QtyProducida'] );
	$stmt->bindParam(':BodBuena', $_SESSION['lotesdetalle']['BodBuena'] );
	$stmt->bindParam(':QtyBuena', $_SESSION['lotesdetalle']['QtyBuena'] );
	$stmt->bindParam(':BodMala', $_SESSION['lotesdetalle']['BodMala'] );
	$stmt->bindParam(':QtyMala', $_SESSION['lotesdetalle']['QtyMala'] );
	$stmt->bindParam(':BodReproceso', $_SESSION['lotesdetalle']['BodReproceso'] );
	$stmt->bindParam(':QtyReproceso', $_SESSION['lotesdetalle']['QtyReproceso'] );
	$stmt->bindParam(':BodMuestra', $_SESSION['lotesdetalle']['BodMuestra'] );
	$stmt->bindParam(':QtyMuestra', $_SESSION['lotesdetalle']['QtyMuestra'] );
	$stmt->bindParam(':BodLab', $_SESSION['lotesdetalle']['BodLab'] );
	$stmt->bindParam(':QtyLab', $_SESSION['lotesdetalle']['QtyLab'] );
	$stmt->bindParam(':IsPending', $_SESSION['lotesdetalle']['IsPending'] );
	$stmt->bindParam(':Estado', $_SESSION['lotesdetalle']['Estado'] );
	$stmt->execute();
        } catch(PDOException $e) {
            echo $e->getMessage();
        }    
}

function quitaslashes_lotesdetalle()
{
         $_SESSION['lotesdetalle']['TxnID'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['TxnID']));
$_SESSION['lotesdetalle']['TimeCreated'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['TimeCreated']));
$_SESSION['lotesdetalle']['TimeModified'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['TimeModified']));
$_SESSION['lotesdetalle']['EditSequence'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['EditSequence']));
$_SESSION['lotesdetalle']['TxnDate'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['TxnDate']));
$_SESSION['lotesdetalle']['TxnNumber'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['TxnNumber']));
$_SESSION['lotesdetalle']['RefNumber'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['RefNumber']));
$_SESSION['lotesdetalle']['ItemRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['ItemRef_ListID']));
$_SESSION['lotesdetalle']['ItemRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['ItemRef_FullName']));
$_SESSION['lotesdetalle']['EmployeeRef_ListID'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['EmployeeRef_ListID']));
$_SESSION['lotesdetalle']['EmployeeRef_FullName'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['EmployeeRef_FullName']));
$_SESSION['lotesdetalle']['Memo'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['Memo']));
$_SESSION['lotesdetalle']['BodProducida'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodProducida']));
$_SESSION['lotesdetalle']['QtyProducida'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyProducida']));
$_SESSION['lotesdetalle']['BodBuena'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodBuena']));
$_SESSION['lotesdetalle']['QtyBuena'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyBuena']));
$_SESSION['lotesdetalle']['BodMala'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodMala']));
$_SESSION['lotesdetalle']['QtyMala'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyMala']));
$_SESSION['lotesdetalle']['BodReproceso'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodReproceso']));
$_SESSION['lotesdetalle']['QtyReproceso'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyReproceso']));
$_SESSION['lotesdetalle']['BodMuestra'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodMuestra']));
$_SESSION['lotesdetalle']['QtyMuestra'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyMuestra']));
$_SESSION['lotesdetalle']['BodLab'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['BodLab']));
$_SESSION['lotesdetalle']['QtyLab'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['QtyLab']));
$_SESSION['lotesdetalle']['IsPending'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['IsPending']));
$_SESSION['lotesdetalle']['Estado'] = htmlspecialchars(strip_tags($_SESSION['lotesdetalle']['Estado']));

 
    }
    


// **********************
// GETTER METHODS
// **********************


function getTxnID()
{
return $this->TxnID;
}

function getTimeCreated()
{
return $this->TimeCreated;
}

function getTimeModified()
{
return $this->TimeModified;
}

function getEditSequence()
{
return $this->EditSequence;
}

function getTxnDate()
{
return $this->TxnDate;
}

function getTxnNumber()
{
return $this->TxnNumber;
}

function getRefNumber()
{
return $this->RefNumber;
}

function getItemRef_ListID()
{
return $this->ItemRef_ListID;
}

function getItemRef_FullName()
{
return $this->ItemRef_FullName;
}

function getEmployeeRef_ListID()
{
return $this->EmployeeRef_ListID;
}

function getEmployeeRef_FullName()
{
return $this->EmployeeRef_FullName;
}

function getMemo()
{
return $this->Memo;
}

function getBodProducida()
{
return $this->BodProducida;
}

function getQtyProducida()
{
return $this->QtyProducida;
}

function getBodBuena()
{
return $this->BodBuena;
}

function getQtyBuena()
{
return $this->QtyBuena;
}

function getBodMala()
{
return $this->BodMala;
}

function getQtyMala()
{
return $this->QtyMala;
}

function getBodReproceso()
{
return $this->BodReproceso;
}

function getQtyReproceso()
{
return $this->QtyReproceso;
}

function getBodMuestra()
{
return $this->BodMuestra;
}

function getQtyMuestra()
{
return $this->QtyMuestra;
}

function getBodLab()
{
return $this->BodLab;
}

function getQtyLab()
{
return $this->QtyLab;
}

function getIsPending()
{
return $this->IsPending;
}

function getEstado()
{
return $this->Estado;
}

// **********************
// SETTER METHODS
// **********************


function setTxnID($val)
{
$this->TxnID =  $val;
}

function setTimeCreated($val)
{
$this->TimeCreated =  $val;
}

function setTimeModified($val)
{
$this->TimeModified =  $val;
}

function setEditSequence($val)
{
$this->EditSequence =  $val;
}

function setTxnDate($val)
{
$this->TxnDate =  $val;
}

function setTxnNumber($val)
{
$this->TxnNumber =  $val;
}

function setRefNumber($val)
{
$this->RefNumber =  $val;
}

function setItemRef_ListID($val)
{
$this->ItemRef_ListID =  $val;
}

function setItemRef_FullName($val)
{
$this->ItemRef_FullName =  $val;
}

function setEmployeeRef_ListID($val)
{
$this->EmployeeRef_ListID =  $val;
}

function setEmployeeRef_FullName($val)
{
$this->EmployeeRef_FullName =  $val;
}

function setMemo($val)
{
$this->Memo =  $val;
}

function setBodProducida($val)
{
$this->BodProducida =  $val;
}

function setQtyProducida($val)
{
$this->QtyProducida =  $val;
}

function setBodBuena($val)
{
$this->BodBuena =  $val;
}

function setQtyBuena($val)
{
$this->QtyBuena =  $val;
}

function setBodMala($val)
{
$this->BodMala =  $val;
}

function setQtyMala($val)
{
$this->QtyMala =  $val;
}

function setBodReproceso($val)
{
$this->BodReproceso =  $val;
}

function setQtyReproceso($val)
{
$this->QtyReproceso =  $val;
}

function setBodMuestra($val)
{
$this->BodMuestra =  $val;
}

function setQtyMuestra($val)
{
$this->QtyMuestra =  $val;
}

function setBodLab($val)
{
$this->BodLab =  $val;
}

function setQtyLab($val)
{
$this->QtyLab =  $val;
}

function setIsPending($val)
{
$this->IsPending =  $val;
}

function setEstado($val)
{
$this->Estado =  $val;
}

// ************************************************************************************
// SELECT busca igual en el campo estado retorna OK si existe el registro
//          retorna actualiza si es el mismo registro y tambien carga en la instancia
//          los valores de la lectura
// *************************************************************************************

    function buscaIgual_lotesdetalle() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['lotesdetalle']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetch(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                if ($registro['TxnID'] === $_SESSION['lotesdetalle']['TxnID']) {
                $this->estado = 'ACTUALIZA';
                }
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// ************************************************************************************
// SELECT dependiendo de las condiones recibidas desde el programa llamado se parsea
//          el archivo json para cargar las comparaciones y tambien los nombres de las variables
//          para una lectura de todos los registros que cumplan la condicion
// *************************************************************************************

    function leetodos_lotesdetalle() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['lotesdetalle']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                $this->estado = 'TODOS';
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// **********************
// SELECT METHOD / LOAD
// **********************

function select_lotesdetalle()
{

$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	try {
$sql = 'SELECT * FROM lotesdetalle WHERE TxnID = :clave'; 
$stmt = $this->db->prepare($sql);
    $stmt->bindParam(":clave", $_SESSION['lotesdetalle']['TxnID']);
        $stmt->execute();
	$registro = $stmt->fetch(PDO::FETCH_ASSOC);
	if ( ! $registro) {
		$this->estado = 'OK';
		return $this->estado;
	} else {
                
		if ($registro['TxnID'] === $_SESSION['invoice']['TxnID']) {
                    $this->estado = 'ACTUALIZA';
                    }
                    }
            
                } catch(PDOException $e) {
                    echo $e->getMessage();
                }
                
		$this->TxnID = $registro['TxnID'];

		$this->TimeCreated = $registro['TimeCreated'];

		$this->TimeModified = $registro['TimeModified'];

		$this->EditSequence = $registro['EditSequence'];

		$this->TxnDate = $registro['TxnDate'];

		$this->TxnNumber = $registro['TxnNumber'];

		$this->RefNumber = $registro['RefNumber'];

		$this->ItemRef_ListID = $registro['ItemRef_ListID'];

		$this->ItemRef_FullName = $registro['ItemRef_FullName'];

		$this->EmployeeRef_ListID = $registro['EmployeeRef_ListID'];

		$this->EmployeeRef_FullName = $registro['EmployeeRef_FullName'];

		$this->Memo = $registro['Memo'];

		$this->BodProducida = $registro['BodProducida'];

		$this->QtyProducida = $registro['QtyProducida'];

		$this->BodBuena = $registro['BodBuena'];

		$this->QtyBuena = $registro['QtyBuena'];

		$this->BodMala = $registro['BodMala'];

		$this->QtyMala = $registro['QtyMala'];

		$this->BodReproceso = $registro['BodReproceso'];

		$this->QtyReproceso = $registro['QtyReproceso'];

		$this->BodMuestra = $registro['BodMuestra'];

		$this->QtyMuestra = $registro['QtyMuestra'];

		$this->BodLab = $registro['BodLab'];

		$this->QtyLab = $registro['QtyLab'];

		$this->IsPending = $registro['IsPending'];

		$this->Estado = $registro['Estado'];


}

// *******************************
// UNSET METHOD / clean
// *******************************

function cleanSession_lotesdetalle()
{

                unset($_SESSION['lotesdetalle']['TxnID']);
unset($_SESSION['lotesdetalle']['TimeCreated']);
unset($_SESSION['lotesdetalle']['TimeModified']);
unset($_SESSION['lotesdetalle']['EditSequence']);
unset($_SESSION['lotesdetalle']['TxnDate']);
unset($_SESSION['lotesdetalle']['TxnNumber']);
unset($_SESSION['lotesdetalle']['RefNumber']);
unset($_SESSION['lotesdetalle']['ItemRef_ListID']);
unset($_SESSION['lotesdetalle']['ItemRef_FullName']);
unset($_SESSION['lotesdetalle']['EmployeeRef_ListID']);
unset($_SESSION['lotesdetalle']['EmployeeRef_FullName']);
unset($_SESSION['lotesdetalle']['Memo']);
unset($_SESSION['lotesdetalle']['BodProducida']);
unset($_SESSION['lotesdetalle']['QtyProducida']);
unset($_SESSION['lotesdetalle']['BodBuena']);
unset($_SESSION['lotesdetalle']['QtyBuena']);
unset($_SESSION['lotesdetalle']['BodMala']);
unset($_SESSION['lotesdetalle']['QtyMala']);
unset($_SESSION['lotesdetalle']['BodReproceso']);
unset($_SESSION['lotesdetalle']['QtyReproceso']);
unset($_SESSION['lotesdetalle']['BodMuestra']);
unset($_SESSION['lotesdetalle']['QtyMuestra']);
unset($_SESSION['lotesdetalle']['BodLab']);
unset($_SESSION['lotesdetalle']['QtyLab']);
unset($_SESSION['lotesdetalle']['IsPending']);
unset($_SESSION['lotesdetalle']['Estado']);


            }

// **********************
// DELETE
// **********************

function delete_lotesdetalle($id)
{


}

// **********************
// UPDATE
// **********************

function update_lotesdetalle()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE lotesdetalle SET TimeCreated=$this->TimeCreated, TimeModified=$this->TimeModified, EditSequence=$this->EditSequence, TxnDate=$this->TxnDate, TxnNumber=$this->TxnNumber, RefNumber=$this->RefNumber, ItemRef_ListID=$this->ItemRef_ListID, ItemRef_FullName=$this->ItemRef_FullName, EmployeeRef_ListID=$this->EmployeeRef_ListID, EmployeeRef_FullName=$this->EmployeeRef_FullName, Memo=$this->Memo, BodProducida=$this->BodProducida, QtyProducida=$this->QtyProducida, BodBuena=$this->BodBuena, QtyBuena=$this->QtyBuena, BodMala=$this->BodMala, QtyMala=$this->QtyMala, BodReproceso=$this->BodReproceso, QtyReproceso=$this->QtyReproceso, BodMuestra=$this->BodMuestra, QtyMuestra=$this->QtyMuestra, BodLab=$this->BodLab, QtyLab=$this->QtyLab, IsPending=$this->IsPending, Estado=$this->Estado, WHERE TxnID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

// ---------------------------------------------------------
// Actualiza tabla con la opcion del PDO bindparam
// ---------------------------------------------------------

function actualiza_lotesdetalle()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE lotesdetalle SET TimeCreated=:TimeCreated, TimeModified=:TimeModified, EditSequence=:EditSequence, TxnDate=:TxnDate, TxnNumber=:TxnNumber, RefNumber=:RefNumber, ItemRef_ListID=:ItemRef_ListID, ItemRef_FullName=:ItemRef_FullName, EmployeeRef_ListID=:EmployeeRef_ListID, EmployeeRef_FullName=:EmployeeRef_FullName, Memo=:Memo, BodProducida=:BodProducida, QtyProducida=:QtyProducida, BodBuena=:BodBuena, QtyBuena=:QtyBuena, BodMala=:BodMala, QtyMala=:QtyMala, BodReproceso=:BodReproceso, QtyReproceso=:QtyReproceso, BodMuestra=:BodMuestra, QtyMuestra=:QtyMuestra, BodLab=:BodLab, QtyLab=:QtyLab, IsPending=:IsPending, Estado=:Estado, WHERE TxnID = :clave;'; 
	$stmt = $this->db->prepare($sql);
	 $stmt->bindParam(':TxnID', $_SESSION['lotesdetalle']['TxnID'] );
	$stmt->bindParam(':TimeCreated', $_SESSION['lotesdetalle']['TimeCreated'] );
	$stmt->bindParam(':TimeModified', $_SESSION['lotesdetalle']['TimeModified'] );
	$stmt->bindParam(':EditSequence', $_SESSION['lotesdetalle']['EditSequence'] );
	$stmt->bindParam(':TxnDate', $_SESSION['lotesdetalle']['TxnDate'] );
	$stmt->bindParam(':TxnNumber', $_SESSION['lotesdetalle']['TxnNumber'] );
	$stmt->bindParam(':RefNumber', $_SESSION['lotesdetalle']['RefNumber'] );
	$stmt->bindParam(':ItemRef_ListID', $_SESSION['lotesdetalle']['ItemRef_ListID'] );
	$stmt->bindParam(':ItemRef_FullName', $_SESSION['lotesdetalle']['ItemRef_FullName'] );
	$stmt->bindParam(':EmployeeRef_ListID', $_SESSION['lotesdetalle']['EmployeeRef_ListID'] );
	$stmt->bindParam(':EmployeeRef_FullName', $_SESSION['lotesdetalle']['EmployeeRef_FullName'] );
	$stmt->bindParam(':Memo', $_SESSION['lotesdetalle']['Memo'] );
	$stmt->bindParam(':BodProducida', $_SESSION['lotesdetalle']['BodProducida'] );
	$stmt->bindParam(':QtyProducida', $_SESSION['lotesdetalle']['QtyProducida'] );
	$stmt->bindParam(':BodBuena', $_SESSION['lotesdetalle']['BodBuena'] );
	$stmt->bindParam(':QtyBuena', $_SESSION['lotesdetalle']['QtyBuena'] );
	$stmt->bindParam(':BodMala', $_SESSION['lotesdetalle']['BodMala'] );
	$stmt->bindParam(':QtyMala', $_SESSION['lotesdetalle']['QtyMala'] );
	$stmt->bindParam(':BodReproceso', $_SESSION['lotesdetalle']['BodReproceso'] );
	$stmt->bindParam(':QtyReproceso', $_SESSION['lotesdetalle']['QtyReproceso'] );
	$stmt->bindParam(':BodMuestra', $_SESSION['lotesdetalle']['BodMuestra'] );
	$stmt->bindParam(':QtyMuestra', $_SESSION['lotesdetalle']['QtyMuestra'] );
	$stmt->bindParam(':BodLab', $_SESSION['lotesdetalle']['BodLab'] );
	$stmt->bindParam(':QtyLab', $_SESSION['lotesdetalle']['QtyLab'] );
	$stmt->bindParam(':IsPending', $_SESSION['lotesdetalle']['IsPending'] );
	$stmt->bindParam(':Estado', $_SESSION['lotesdetalle']['Estado'] );
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

}
?>
<!-- end of generated class -->
